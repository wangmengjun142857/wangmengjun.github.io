<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《娱乐至死》读书笔记</title>
      <link href="/2020/02/26/%E5%A8%B1%E4%B9%90%E8%87%B3%E6%AD%BB/"/>
      <url>/2020/02/26/%E5%A8%B1%E4%B9%90%E8%87%B3%E6%AD%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>昨天晚上刚看完 尼尔·波兹曼 的《娱乐至死》，简单做下读书笔记。总的来说，这是一本不错的书，作者对人类命运的预言：我们将毁于我们所热爱的东西。</p></blockquote><a id="more"></a><blockquote><p>乔治·奥威尔曾在《一九八四》中预言人类将会遭受外来压迫，失去自由；赫胥黎则在《美丽新世界》中表达了另一种忧虑：人们会渐渐爱上工业技术带来的娱乐和文化，不再思考。去年刚好看过乔治·奥威尔的《一九八四》，《娱乐至死》也提到了该书，并将其与赫胥黎的《美丽新世界》多次对比，为了告诉我们：未来的世界会是赫胥黎所预言的那样，而不是乔治·奥威尔所说的那样。波兹曼在书中多次提到世界不会像奥威尔的《一九八四》中描述的那样，诚然目前的确不是，但太多次提到不免让人有点排斥，有点抬一踩一的感觉，不太喜欢这种风格。换句话说，如果当今世界是奥威尔式的，那么《一九八四》就会不复存在，《娱乐至死》也就没有存在的必要，当然你也就看不到这句话了。</p></blockquote><blockquote><p>萧伯纳：理智的人适应环境，而世上所有的进步都仰赖不理智的人。</p></blockquote><blockquote><p>媒介的形式偏好某些特殊的内容，从而能最终控制文化。</p></blockquote><blockquote><p>表达思想的方式将影响所要表达思想的内容。</p></blockquote><blockquote><p>看一种思想，物件文化等的影响，不能只重视数量，要看其占比，看其垄断程度。</p></blockquote><blockquote><p>也许，并没有什么（绝对的）是非对错，只是我们被灌输了一种“标准”的思想，非该标准的其他思想就会被（大脑）认为是错误或者非正统的思想，导致我们可能都已经失去了辨别是非的能力；也许，我们是可以辨别是非的，但又由于其他的思想在左右我们，误导我们，我们误以为自己不能辨别是非。这应该算是建立在奥威尔《一九八四》中的双重思想上的三重思想。以我的理解，双重思想是你知道这件事，然后你要忘记你知道这件事；三重思想也就是你知道你要忘记你知道这件事。但问题在于以下三点：</p><blockquote><p>a. 一个人很难同时拥有双重思想和三重思想<br>b. 一个人很难判断自己拥有（或处于）几重思想<br>c. 假设一个人同时拥有双重思想和三重思想，也知道自己目前处于几重思想，但他仍然很难判断什么时候该拥有几重思想，才是最有利或最安全的。<br>解决上述问题最需要的是两个能力：判断力和决策力，这两个能力也是我认为目前阶段最为需要的能力。</p></blockquote></blockquote><blockquote><p>诺思罗普·弗莱 《伟大的代码：圣经与文学》：通过共鸣，某种特定语境中的某个特定说法获得了普遍意义。</p></blockquote><blockquote><p>亚历西斯·德·托克维尔 《论美国的民主》：枪炮的发明使奴隶和贵族得以在战场上平等对峙；印刷术为各阶层的人们打开了同样的信息之门，邮差把知识一视同仁地送到茅屋和宫殿之前。</p></blockquote><blockquote><p>潘恩《理性时代》：所有的教堂，不论是犹太教、基督教或土耳其教，在我看来都只不过是人的发明，是为了吓唬和奴役人类、垄断权力和利益而建立的。</p></blockquote><blockquote><p>如果只拘泥于耳熟能详的专门术语，就会丧失对事物进行宏观全面认识的能力，即使在熟悉的领域里也一样。</p></blockquote><blockquote><p>柯勒律治：到处是水却没有一滴水可以喝。</p></blockquote><blockquote><p>加夫里尔·萨洛蒙：看照片只需要能辨认，看文字却需要能理解。</p></blockquote><blockquote><p>P89:照片可以证明某个人在那里或发生了某事。    该表述在目前社会已不成立，如今ps盛行，照片所展示的不一定为实，照片已很难做证明。</p></blockquote><blockquote><p>电视已经赢得了“元媒介”的地位——一种不仅决定我们对世界的认识，而且决定我们怎样认识世界的工具。</p></blockquote><blockquote><p>我们的问题不在于电视为我们展示具有娱乐性的内容，而在于所有的内容都以娱乐的方式表现出来，这就完全是另一回事了。</p></blockquote><blockquote><p>归根结底，我们从来没有听说过，一种媒介的表现形式可以和这种媒介本身的倾向相对抗。</p></blockquote><blockquote><p>沃尔特·李普曼在1920年说过：无法察觉谎言的社会是没有自由的。</p></blockquote><blockquote><p>我只是想说，像字母和印刷机一样，电视通过控制人们的时间、注意力和认知习惯获得了控制人们教育的权力。</p></blockquote><blockquote><p>西塞罗说过，教育的目的是让学生们摆脱现实的奴役，而现在的年轻人正竭力做着相反的努力——为了适应现实而改变自己。</p></blockquote><blockquote><p>电视提供了一个诱人而富有创意的不同选择，我们也许可以说，电视提出了三条戒律并由此形成了教育的哲学。三条戒律如下：</p><blockquote><p>a. 你不能有前提条件<br>b. 你不能令人困惑<br>c. 你应像躲避瘟神一样避开阐述。</p></blockquote></blockquote><blockquote><p>电视文化相较于印刷文化，文字需要自己去看，去理解，且可自己留有思考的时间。而电视即音频，视频，图像等信息的被动接收，且无思考的余地，所以人们看电视会感到相对舒适，而看书可能会感到吃力费劲。即被动接收与主动接收的差异。</p></blockquote><blockquote><p>萨洛蒙：从电视上获得的意义往往是一些具体的片段，不具备推论性，而从阅读中获得的意义往往和我们原来储存的知识相关，所以具有较强的推论性。</p></blockquote><blockquote><p>他（赫胥黎）试图在《美丽新世界》中告诉我们，人们感到痛苦的不是他们用笑声代替了思考，而是他们不知道自己为什么笑以及为什么不再思考。</p></blockquote><blockquote><p>这本书参考文献写了三页，下面记录一些我觉得不错的书籍：</p><blockquote><p>弗莱《伟大的代码：圣经与文学》<br>    富兰克林    《本杰明·富兰克林自传》<br>    哈特    《通俗书籍：美国文化趣味的历史》<br>    《圣经》<br>    托马斯·潘恩《常识》<br>    斯巴克斯《林肯-道格拉斯1858年的辩论》<br>    潘恩《理性时代》<br>    梭罗《瓦尔登湖》<br>    奥尔德斯·赫胥黎《美丽新世界》<br>    乔治·奥威尔《一九八四》</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 娱乐至死 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7.4网站搭建</title>
      <link href="/2020/01/07/centos7.4%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/01/07/centos7.4%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>网站搭建分为两步，搭建环境和网站配置。环境一般采用LAMP（linux+Apache+mysql或mariadb+php）或者LNMP（linux+nginx+mysql或mariadb+php），网站配置一般采用基于域名（或者基于IP，端口）的虚拟主机配置。</p></blockquote><a id="more"></a><p>环境搭建:    154.209.252.77<br>    系统版本：centos 7.4    (环境均为yum 安装，也可编译安装，但较麻烦)<br>    Apache：2.4.6<br>    MariaDB: 5.5.64<br>    Php:5.4.16</p><ol><li><p>安装 apache<br>a)    安装启动 httpd 并加入开机启动项<br>  yum install -y httpd httpd-devel<br>  systemctl start httpd &amp;&amp; systemctl enable httpd<br>b)    防火墙及云防火墙放行 80端口，确认80端口是否在监听<br>  firewall-cmd  –permenant  –zone=public  –add-service=http<br>  netstat  -ntlp    (若无法使用该命令，则需要安装net-tools)<br>   <img src="/img/2020.1.7-0.jpg" alt><br>浏览器登录IP<br>   <img src="/img/2020.1.7-1.jpg" alt></p></li><li><p>安装mariadb （和mysql 基本一致）<br>a)    安装mariadb及其组件<br>yum install mariadb mariadb-server mariadb-libs mariadb-devel<br>（或mariadb-*）<br>查看相应的安装包是否已安装：rpm -qa | grep maria<br>b)    开启mariadb 服务，并设置开机启动，检查mariadb 状态。<br><code>systemctl start mariadb &amp;&amp; systemctl enable mariadb    &amp;&amp; systemctl status mariadb</code><br>c)    防火墙及云防火墙放行 3306端口，确认3306端口是否在监听<br><code>firewall-cmd  –permenant  --zone=public  --add-service=mysql</code><br><code>netstat -ntlp</code><br>d)    初始化数据库（可有可无,建议操作）<br><code>mysql_secure_installation</code><br><img src="/img/2020.1.7-2.jpg" alt></p></li></ol><p>e)    登录数据库测试</p><ol start="3"><li>安装PHP<br>a)    安装php<br><code>yum install -y php</code><br><code>rpm -ql php</code><br>b)    将php 与mysql 关联起来<br><code>yum install -y php-mysql</code><br><code>rpm -sql php-mysql</code><br>c)    安装常用php模块<br><code>yum install -y php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap curl-devel php-bcmath</code><br>d)    测试php<br>在 /var/www/html/ 下创建文件1.php，写入以下文件：<br><img src="/img/2020.1.7-3.jpg" alt><br>然后重启 apache ，<code>systemctl restart httpd</code><br>浏览器中输入 154.209.252.77/1.php ，可看到如下界面:<br><img src="/img/2020.1.7-4.jpg" alt><br>环境部署到此完成。<br><br><br></li></ol><blockquote><p>网站配置<br>  a) 将网站源码文件夹放至 /var/www/html下<br>  b) mysql 文件放至 根目录（位置随意，但不要放置在用户家目录下，也不建议直接复制到/var/lib/mysql）下，将 /etc/my.cnf  中的 datadir 目录改为数据库文件所在的目录，然后重启mariadb，<code>systemctl restart mariadb</code><br> <img src="/img/2020.1.7-5.jpg" alt><br>基于域名的虚拟主机配置<br>  c) 将<code>/usr/share/doc/httpd-2.4.6/httpd-vhosts.conf</code> 复制到 <code>/etc/httpd/conf.d/</code> 下（<code>cp /usr/share/doc/httpd-2.4.6/httpd-vhosts.conf  /etc/httpd/conf.d/</code>），也可自行创建文件。写入以下配置，<code>DocumentRoot</code> 为网站所在路径，<code>ServerName</code> 为网站域名。然后重启httpd 即可。<br> <img src="/img/2020.1.7-6.jpg" alt><br>  e) 在本地测试需要修改hosts 文件（window10 路径：<code>C:\Windows\System32\drivers\etc\hosts</code>,linux 一般为 <code>/etc/hosts</code>），加入 <code>154.209.252.77 www.elders.com.cn    www.shstamping.com   m.marketingbetter.com</code>    ，在网页测试即可。<br> <img src="/img/2020.1.7-7.jpg" alt><br> <img src="/img/2020.1.7-8.jpg" alt><br> <img src="/img/2020.1.7-9.jpg" alt><br> <img src="/img/2020.1.7-10.jpg" alt></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交换机自动保存配置上传到服务器指定文件夹</title>
      <link href="/2020/01/07/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E8%87%AA%E5%8A%A8%E4%BF%9D%E5%AD%98%E9%85%8D%E7%BD%AE%E4%B8%8A%E4%BC%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2020/01/07/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E8%87%AA%E5%8A%A8%E4%BF%9D%E5%AD%98%E9%85%8D%E7%BD%AE%E4%B8%8A%E4%BC%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>需求：为了数据的安全，需要经常备份设备的配置，随着设备数量的增多，备份需要的时间和人工成本也相应增加了很多，所以需要让网络设备自动备份配置并且上传到服务器上。即自动上传到FTP 服务器。</p></blockquote><a id="more"></a><blockquote><p>思路：</p><ol><li>安装一台FTP 服务器，并配置好</li><li>准备好交换机自动上传命令</li><li>测试</li></ol></blockquote><blockquote><p>配置步骤：</p><ol><li>在linux 系统（windows 也可）上安装FTP服务</li><li>交换机型号不同，对应的配置有小差异<br> a) S系列交换机配置命令 (<code>undo info-center enable</code> 关闭信息控制中心，防止弹出信息)<br>  <code>[wangmj]set save-configuration interval 60</code>    定时保持新配置的时间间隔为60min（系统在定时保存配置文件之前会比较配置文件，如果配置文件没有改变则不会执行定时保存。如配置没有变化，不会保存，不会上传到服务器）<br> <code>[wangmj]set save-configuration delay 10</code>  配置发生变化10分钟后，自动保存新配置并上传到FTP服务器<br> <code>[wangmj]set save-configuration backup-to-server server 192.168.25.25 transport-type ftp user wangmj password wangmj path /wangmj</code>  设置自动保存配置到FTP服务器的/wangmj下<br> b) CE 系列交换机配置命令<br> <code>[wangmj]configuration file auto-save interval 60</code>    定时保存新配置的时间间隔为 60min<br> <code>[wangmj]configuration file auto-save delay 10</code>  配置发生变化10分钟后，自动保存新配置并上传至FTP服务器<br> <code>[wangmj]configuration file auto-save backup-to-server server 192.168.25.25 transport-type ftp user wangmj password wangmj path /wangmj</code>   设置自动保存配置到FTP服务器的/wangmj 文件夹下<br> <code>commit</code>保存，或者 在进入系统用户时，输入 system-view immediately  可使输入的命令直接生效。<br> c) 路由器的话，只有自动保存，没有自动上传。自动保存：<code>autosave interval</code>    </li><li>测试即可。</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 交换路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HCNA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《愿你的生活既有善良，又有锋芒》读书笔记</title>
      <link href="/2020/01/02/%E6%84%BF%E4%BD%A0%E7%9A%84%E7%94%9F%E6%B4%BB%E6%97%A2%E6%9C%89%E5%96%84%E8%89%AF%EF%BC%8C%E5%8F%88%E6%9C%89%E9%94%8B%E8%8A%92/"/>
      <url>/2020/01/02/%E6%84%BF%E4%BD%A0%E7%9A%84%E7%94%9F%E6%B4%BB%E6%97%A2%E6%9C%89%E5%96%84%E8%89%AF%EF%BC%8C%E5%8F%88%E6%9C%89%E9%94%8B%E8%8A%92/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天看完了 宿春礼 的《愿你的生活既有善良，又有锋芒》，我一般来说是不太喜欢看这种书的，前段时间姐姐买的，才勉强看了看。书也不太厚，大概180多页。有一点感想，有的观点认同，有的还是不太认同的。看书要有自己的思想，只看书不思考，是不会有进步的。</p></blockquote><a id="more"></a><blockquote><p>灵感要随时立刻记下来</p></blockquote><blockquote><p>想做的事，立刻去做。不要作为一位伟大的思想家，要做行动家。</p></blockquote><blockquote><p>找准位置与方向，别让他人的言语或行为影响自己的判断。要对自己有清晰明确的定位。</p></blockquote><blockquote><p>以其人之道还治其人之身，以牙还牙以眼还眼。</p></blockquote><blockquote><p>忍耐，有智慧的忍耐应该是趋利避害的。如果忍耐对单方或者双方有益，则忍耐是有价值的；如果忍耐对双方都有害而无益，则不仅不能忍耐，还要设法阻止。</p></blockquote><blockquote><p>人活着就要学会捍卫自己的利益，该是你的你无需客气，有时“斤斤计较”并不丢脸。</p></blockquote><blockquote><p>忍一时风平浪静，忍一时一世无成。忍耐也有度，要把握好度。</p></blockquote><blockquote><p>明辨是非的能力是非常难得的。如果对方错了，我们要告诉对方错在哪里，并要求对方就其过错进行补偿。</p></blockquote><blockquote><p>宜将剩勇追穷寇，不可沽名学霸王。</p></blockquote><blockquote><p>大多能忍奇辱之人，日后必有过人之处。比如 亨利的 卡诺莎之行，压力山大一世对拿破仑，越王勾践。</p></blockquote><blockquote><p>要时刻保持理智，不管是过于悲伤或是愤怒还是过于欢喜。</p></blockquote><blockquote><p>很少有人会真的为他人着想吧，大多是有共同利益或者为以后的利益着想吧。</p></blockquote><blockquote><p>见人只说三分话， 不要交浅言深，不要见人就如遇知己相见恨晚般全盘托付而出。没有绝对的了解和把握，不要对一个人无话不说。</p></blockquote><blockquote><p>识人：不以喜好厌恶识人，不以出身背景识人。</p></blockquote><blockquote><p>遭到拒绝后，哪怕再沮丧再气愤，也不能气急败坏，恶语相向。说话应该和气一些，理智一些，一时的拒绝不等于永远拒绝。</p></blockquote><blockquote><p>要主动，美好的东西不会主动跑到你的面前来，要努力争取。有实力，也要会展现出来，不能指望其他人或者领导有双慧眼，要靠自己。绝大多数人都有理想或者目标，但首先要会展现自己，寻找机会，创造机会。</p></blockquote><blockquote><p>要准备评估自己的能力，在能力范围内要自信；不要怕做错事，要从错误中吸取教训，更好的成长和进步；说话要流利，适当地表示友善，营造和谐人际关系，广结善缘；继续强化你的才干和能力，适当发现其他专长。</p></blockquote><blockquote><p>机会一旦出现就要牢牢抓住，没有抓住的永远都不能叫做机会。可以尝试从别人的失误中获得机遇。</p></blockquote><blockquote><p>没有思考的读书或者做事，收效基本为零。</p></blockquote><blockquote><p>要升职，就要主动争取，更多的时候，机会是我们自己争取来的。不放弃代理或者轮岗的机会。</p></blockquote><blockquote><p>要学会适当的表现自己，意识到时机不对或者对方不感兴趣，要明事理，及时收手。</p></blockquote><blockquote><p>如何判断一个工作是不是你所喜爱的呢？有一个最简单的评判标准，就是看你好不好意思告诉别人你的工作内容。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 愿你的生活既有善良，又有锋芒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《linux就该这么学》宣传篇</title>
      <link href="/2019/10/12/%E3%80%8Alinux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6%E3%80%8B%E5%AE%A3%E4%BC%A0%E7%AF%87/"/>
      <url>/2019/10/12/%E3%80%8Alinux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6%E3%80%8B%E5%AE%A3%E4%BC%A0%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本书是由全国多名红帽架构师（RHCA）基于最新Linux系统共同编写的高质量Linux技术自学教程，极其适合用于Linux技术入门教程或讲课辅助教材，目前是国内最值得去读的Linux教材，也是最有价值的Linux实验手册。<a id="more"></a>章节包括有：</p></blockquote><p><a href="https://www.linuxprobe.com/chapter-0.html" target="_blank" rel="noopener">第0章 咱们先来谈谈学习方法和红帽系统。</a></p><p><a href="https://www.linuxprobe.com/chapter-1.html" target="_blank" rel="noopener">第1章 部署虚拟环境安装linux系统。</a></p><p><a href="https://www.linuxprobe.com/chapter-2.html" target="_blank" rel="noopener">第2章 新手必须掌握的Linux命令。</a></p><p><a href="https://www.linuxprobe.com/chapter-3.html" target="_blank" rel="noopener">第3章 管道符、重定向与环境变量。</a></p><p><a href="https://www.linuxprobe.com/chapter-4.html" target="_blank" rel="noopener">第4章 Vim编辑器与Shell命令脚本。</a></p><p><a href="https://www.linuxprobe.com/chapter-5.html" target="_blank" rel="noopener">第5章 用户身份与文件权限。</a></p><p><a href="https://www.linuxprobe.com/chapter-6.html" target="_blank" rel="noopener">第6章 存储结构与磁盘划分。</a></p><p><a href="https://www.linuxprobe.com/chapter-7.html" target="_blank" rel="noopener">第7章 使用RAID与LVM磁盘阵列技术。</a></p><p><a href="https://www.linuxprobe.com/chapter-8.html" target="_blank" rel="noopener">第8章 Iptables与Firewalld防火墙。</a></p><p><a href="https://www.linuxprobe.com/chapter-9.html" target="_blank" rel="noopener">第9章 使用ssh服务管理远程主机。</a></p><p><a href="https://www.linuxprobe.com/chapter-10.html" target="_blank" rel="noopener">第10章 使用Apache服务部署静态网站。</a></p><p><a href="https://www.linuxprobe.com/chapter-11.html" target="_blank" rel="noopener">第11章 使用Vsftpd服务传输文件。</a></p><p><a href="https://www.linuxprobe.com/chapter-12.html" target="_blank" rel="noopener">第12章 使用Samba或NFS实现文件共享。</a></p><p><a href="https://www.linuxprobe.com/chapter-13.html" target="_blank" rel="noopener">第13章 使用Bind提供域名解析服务。</a></p><p><a href="https://www.linuxprobe.com/chapter-14.html" target="_blank" rel="noopener">第14章 使用DHCP动态管理主机地址。</a></p><p><a href="https://www.linuxprobe.com/chapter-15.html" target="_blank" rel="noopener">第15章 使用Postfix与Dovecot部署邮件系统</a></p><p><a href="https://www.linuxprobe.com/chapter-16.html" target="_blank" rel="noopener">第16章 使用Squid部署代理缓存服务。</a></p><p><a href="https://www.linuxprobe.com/chapter-17.html" target="_blank" rel="noopener">第17章 使用iSCSI服务部署网络存储。</a></p><p><a href="https://www.linuxprobe.com/chapter-18.html" target="_blank" rel="noopener">第18章 使用MariaDB数据库管理系统。</a></p><p><a href="https://www.linuxprobe.com/chapter-19.html" target="_blank" rel="noopener">第19章 使用PXE+Kickstart部署无人值守安装。</a></p><p><a href="https://www.linuxprobe.com/chapter-20.html" target="_blank" rel="noopener">第20章 使用LNMP架构部署动态网站环境。</a></p><p>对Linux感兴趣的一定要加个收藏，在线学习网址是<a href="https://www.linuxprobe.com/chapter-00.html" target="_blank" rel="noopener">https://www.linuxprobe.com/chapter-00.html</a></p><p>附件：</p><p>Linux入门教程，<a href="https://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">https://www.linuxprobe.com/docs/LinuxProbe.pdf</a></p><p>Linux命令大全：<a href="https://www.linuxcool.com/" target="_blank" rel="noopener">https://www.linuxcool.com/</a><br>Linux系统下载站：<a href="http://www.linuxdown.com/" target="_blank" rel="noopener">http://www.linuxdown.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第十六节课</title>
      <link href="/2019/10/11/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E5%85%AD%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/10/11/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E5%85%AD%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>10月11日开始了第十六节课，主要讲了<a href="https://www.linuxprobe.com/chapter-16.html" target="_blank" rel="noopener">第十六章 使用Squid部署代理缓存服务。</a>和<a href="https://www.linuxprobe.com/chapter-17.html" target="_blank" rel="noopener">第十七章 使用iSCSI服务部署网络存储。</a>。主要包括 <code>代理缓存服务</code> <code>配置Squid服务程序</code> <code>正向代理</code> <code>反向代理</code> 以及 <code>配置iSCSI</code>服务端和客户端。 <a id="more"></a></p></blockquote><p>附上几张笔记：<br><img src="/img/10.11-1.jpg" alt="10.11笔记" title="10.11笔记"><br><img src="/img/10.11-2.jpg" alt="10.11笔记" title="10.11笔记"><br><img src="/img/10.11-3.jpg" alt="10.11笔记" title="10.11笔记"><br><img src="/img/10.11-4.jpg" alt="10.11笔记" title="10.11笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第十五节课</title>
      <link href="/2019/10/07/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E4%BA%94%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/10/07/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E4%BA%94%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>10月6日开始了第十五节课，主要讲了 <code>分离解析技术</code> <a href="https://www.linuxprobe.com/chapter-14.html" target="_blank" rel="noopener">第十四章： 使用DHCP动态管理主机地址</a> 和<a href="https://www.linuxprobe.com/chapter-15.html" target="_blank" rel="noopener">第十五章 使用Postfix与Dovecot部署邮件系统</a>，主要包括 <code>部署dhcpd服务程序</code> <code>自动管理IP地址</code> <code>分配固定IP地址</code> <code>部署基础的电子邮件系统</code> <code>配置Postifx服务程序</code> <code>配置Dovecot服务程序</code> 以及 <code>设置用户别名信箱</code>。   <a id="more"></a></p></blockquote><blockquote><p><code>DHCP (Dynamic Host Configuration Protocol，动态主机配置协议)</code>，用于自动管理局域网内主机的IP 地址，子网掩码，网关地址及DNS 地址等参数，可以有效地提升IP 地址的利用率，提高配置效率，并降低管理和维护成本。</p></blockquote><blockquote><p>DHCP 作用域=地址池+排除范围</p></blockquote><blockquote><p>邮件端口：</p><blockquote><p>SMTP:TCP,25<br>POP3:TCP,110<br>IMAP:TCP,143</p></blockquote></blockquote><blockquote><p>常用邮件协议：</p><blockquote><p>MUA,收发邮件<br>MTA，转发邮件<br>MDA，保存邮件</p></blockquote></blockquote><blockquote><p>发邮件：</p><blockquote><p>Postfix, rhel 7<br>sendmail,rhel 5/6</p></blockquote></blockquote><p>最后附上几张笔记：<br><img src="/img/10.6-1.jpg" alt="10.6笔记" title="10.6笔记"><br><img src="/img/10.6-2.jpg" alt="10.6笔记" title="10.6笔记"><br><img src="/img/10.6-3.jpg" alt="10.6笔记" title="10.6笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第十四节课</title>
      <link href="/2019/10/07/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E5%9B%9B%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/10/07/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E5%9B%9B%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>10月5日开始了第十四节课，主要讲了 <a href="https://www.linuxprobe.com/chapter-12.html" target="_blank" rel="noopener">第十二章： 使用Samba或NFS实现文件共享</a>的 <code>autofs 自动挂载</code> 和<a href="https://www.linuxprobe.com/chapter-13.html" target="_blank" rel="noopener">第十三章： 使用Bind提供域名解析服务</a>的 <code>DNS域名解析服务</code> <code>正向解析</code> <code>反向解析</code> <code>部署从服务器</code> <code>部署缓存服务器</code> 等内容。<a id="more"></a></p></blockquote><blockquote><p><code>autofs</code>，autofs服务程序的一种linux 系统守护进程，当检测到用户试图访问一个尚未挂载的文件系统时，将自动挂载该文件系统。</p></blockquote><blockquote><p><code>DNS(Domain Name System，域名系统)</code> 技术提供三种类型的服务器：</p><blockquote><p>主服务器（管理）：在特定区域内具有唯一性，负责维护该区域内的域名与IP地址之间的对应关系；<br>从服务器（同步）：从主服务器中获取域名与IP地址的对应关系并进行维护，以防主服务器宕机等情况。作用：减轻主服务器负载压力；加快用户的请求速度。<br>缓存服务器：通过向其他域名解析服务器查询获得域名与IP地址的对应关系，并将经常查询的域名信息保存到服务器本地，以此来提高重复查询时 的效率。</p></blockquote></blockquote><blockquote><p><code>BIND(Berkeley Internet Name Domain，伯克利因特网名称域)</code>服务是全球范围内使用最广泛，最安全可靠且高效的域名解析服务程序。软件包一般安装 bind-chroot。bind服务程序的名称是 <code>named</code>，以下三个配置文件较为关键：</p><blockquote><p>主配置文件，/etc/named.conf<br>区域配置文件，/etc/named.rfc1912.zones<br>数据配置文件目录，/var/named</p></blockquote></blockquote><blockquote><p><code>正向解析</code>，根据域名（主机名）查找到对应的IP，最常用的DNS 工作模式。</p></blockquote><blockquote><p><code>反向解析</code>的作用是将用户提交的IP地址解析为对应的域名信息，他一般用于对某个IP地址上绑定的所有域名进行整体屏蔽，屏蔽由某些域名发送的垃圾邮件。</p></blockquote><p>最后附上几张笔记：<br><img src="/img/10.5-1.jpg" alt="10.5笔记" title="10.5笔记"><br><img src="/img/10.5-2.jpg" alt="10.5笔记" title="10.5笔记"><br><img src="/img/10.5-3.jpg" alt="10.5笔记" title="10.5笔记"><br><img src="/img/10.5-4.jpg" alt="10.5笔记" title="10.5笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第十三节课</title>
      <link href="/2019/10/07/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E4%B8%89%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/10/07/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E4%B8%89%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>10月4日开始了第十三节课，主要讲了<a href="https://www.linuxprobe.com/chapter-11.html" target="_blank" rel="noopener">第十一章： 使用Vsftpd服务传输文件</a>和<a href="https://www.linuxprobe.com/chapter-12.html" target="_blank" rel="noopener">第十二章： 使用Samba或NFS实现文件共享</a> ，主要包括 <code>文件传输协议</code> <code>vsftpd 服务程序的三种认证模式：匿名开放模式，本地用户模式，虚拟用户模式</code> 以及 <code>简单文件传输协议 TFTP</code>，<code>Samba``NFS文件共享</code>。<a id="more"></a></p></blockquote><blockquote><p><code>FTP</code>是一种在互联网中进行文件传输的协议，基于客户端/服务器模式，默认使用20和21端口，其中端口20（数据端口）用于进行数据传输，端口21（命令端口）用于接受客户端发出的相关FTP命令与参数。FTP 协议有两种工作模式：主动模式，FTP服务器主动向客户端发起连接请求；被动模式，FTP服务器等待客户端发起连接请求（FTP的默认工作模式）。</p></blockquote><blockquote><p><code>umask</code> ，反掩码。文件反掩码umask=666-权限 （若权限大于666时，umask为000），目录反掩码umask=777-权限。</p></blockquote><blockquote><p><code>vsftpd 服务程序</code> vsftpd作为更安全的文件传输的服务程序，允许用户以三种认证模式登录到FTP服务器上。</p><blockquote><p>匿名开放模式：是一种最不安全的认证模式，任何人都可以无需密码验证而直接登录到FTP服务器，默认访问 /var/ftp目录；<br>本地用户模式：是通过linux系统本地的账户密码信息进行认证的模式，默认访问 用户家目录；<br>虚拟用户模式：是三种中最安全的一种认证模式，需要为FTP服务单独建立用户数据库文件，虚拟出用来进行口令验证的账户信息，而这些账户信息在服务器系统中实际上是不存在的，仅供FTP服务程序进行认证使用。默认访问 映射用户的家目录。</p></blockquote></blockquote><blockquote><p>PAM，Pluggable Authentication Modules，可插拔认证模块，为RHCA 333课程。</p></blockquote><blockquote><p><code>简单文件传输协议（Trivial File Transfer Protocol,TFTP）</code>,是一种基于UDP 协议（69端口）在客户端和服务器之间进行简单文件传输的协议。</p></blockquote><blockquote><p>Samba 文件共享服务，一般可用于 Linux与linux，linux及windows之间的文件共享；NFS 只能用于linux与linux之间。</p></blockquote><p>最后附上几张笔记：<br><img src="/img/10.4-1.jpg" alt="10.4笔记" title="10.4笔记"><br><img src="/img/10.4-2.jpg" alt="10.4笔记" title="10.4笔记"><br><img src="/img/10.4-3.jpg" alt="10.4笔记" title="10.4笔记"><br><img src="/img/10.4-4.jpg" alt="10.4笔记" title="10.4笔记"><br><img src="/img/10.4-5.jpg" alt="10.4笔记" title="10.4笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第十二节课</title>
      <link href="/2019/09/30/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/30/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月29日开始了第十二节课，主要讲了<a href="https://www.linuxprobe.com/chapter-10.html" target="_blank" rel="noopener">第十章：使用Apache服务部署静态网站</a>，讲述了 <code>网站服务程序</code> <code>SElinux 安全子系统</code> <code>个人用户主页功能</code> <code>虚拟主机功能</code>（基于IP地址，基于主机域名，基于端口号）。 <a id="more"></a></p></blockquote><blockquote><p><code>Apache</code> 特点：</p><blockquote><p>支持多计算机平台<br>配置文件简单，易操作<br>支持实时监控服务器状态和定制服务器日志。<br>稳定，安全，效率，功能模块化</p></blockquote></blockquote><blockquote><p><code>配置文件</code></p><blockquote><p>主配置文件：保存最重要的配置参数，一般路径：/etc/服务名称/服务名称.conf<br>一般配置文件：保存的其他配置文件</p></blockquote></blockquote><blockquote><p><code>SELinux</code> (security-Enhanced Linux)：对服务程序的功能进行限制（SELinux 域限制可以确认服务程序做不了出格的事情）；对文件资源的访问限制（SELinux 安全上下文确保文件资源只能被其所属的服务程序进行访问）。SELinux 服务有三种配置模式，具体如下：</p><blockquote><p>enforcing：强制启用安全策略模式，将拦截服务的不合法请求。<br>permissive：遇到服务越权访问时，只发出警告而不强制拦截。<br>disabled：对于越权的行为不警告也不拦截。</p></blockquote></blockquote><blockquote><p>selinux 配置文件在 <code>/etc/selinux/config</code>，使用 <code>getenforce</code>可以查看当前模式；setenforece[0|1]可以修改selinux 当前的运行模式，0为禁用，1为启动，这种修改只是临时生效，重启后失效。<br><code>semanage</code>命令用于管理 selinux 的策略，格式为 “semanage [选项] [文件]” ，常用到的参数及其功能如下：</p><blockquote><p>-l 参数用于查询；<br>-a 参数用于添加；<br>-m 参数用于修改；<br>-d 参数用于删除</p></blockquote></blockquote><blockquote><p>一种排错思路：若有报错，怀疑为 selinux 问题的话，可先将selinux 关闭再做测试。</p></blockquote><p>复习：基于端口号</p><p>预习：<br>10.4<br><a href="https://www.linuxprobe.com/chapter-11.html" target="_blank" rel="noopener">第十一章： 使用Vsftpd服务传输文件</a><br>10.5<br><a href="https://www.linuxprobe.com/chapter-12.html" target="_blank" rel="noopener">第十二章： 使用Samba或NFS实现文件共享</a><br><a href="https://www.linuxprobe.com/chapter-14.html" target="_blank" rel="noopener">第十四章： 使用DHCP动态管理主机地址</a><br>10.6<br><a href="https://www.linuxprobe.com/chapter-13.html" target="_blank" rel="noopener">第十三章： 使用Bind提供域名解析服务</a>    </p><p>最后附上几张笔记：<br><img src="/img/9.29-1.jpg" alt="9.29笔记" title="9.29笔记"><br><img src="/img/9.29-2.jpg" alt="9.29笔记" title="9.29笔记"><br><img src="/img/9.29-3.jpg" alt="9.29笔记" title="9.29笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第十一节课</title>
      <link href="/2019/09/29/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E4%B8%80%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/29/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E4%B8%80%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月28日开始了第十一节课，主要讲了<a href="https://www.linuxprobe.com/chapter-09.html" target="_blank" rel="noopener">第九章：使用ssh服务管理远程主机</a>，讲述了 <code>四种配置IP 的方法</code> <code>绑定两块网卡</code> <code>配置sshd服务</code> <code>安全密钥验证</code> <code>远程传输命令</code> <code>不间断会话服务</code> 等。 <a id="more"></a></p></blockquote><blockquote><p>四种配置IP 的方法：</p><blockquote><p>更改配置文件 /etc/sysconfig/network-scripts/<br>nmtui （rhel 7），setup (rhel 5/6)<br>nm-connection-editor<br>图形化界面设置</p></blockquote></blockquote><blockquote><p>绑定两块网卡： 正常时，提升网速；有一块坏时，自动备援。（ps：虚拟机在模拟硬盘和网卡时经常出错，建议关机添加再开机。）</p></blockquote><blockquote><p>linux 内核支持网卡绑定驱动。常见的网卡绑定驱动有三种模式：mode0，mode1和mode6。下面以绑定两块网卡为例：</p><blockquote><p>mode0(平衡负载模式)：平时两块网卡均工作，且自动备援，但需要在与服务器本地网卡相连的交换机设备上进行端口聚合来支持绑定技术。<br>mode1(自动备援模式)：平时只有一块网卡工作，在它故障后自动替换为另外的网卡。<br>mode6(平衡负载模式)：平时两块网卡均工作，且自动备援，无须交换机设备提供辅助支持。</p></blockquote></blockquote><blockquote><p>需要记住的四句话：</p><blockquote><p>linux 系统中的一切都是文件<br>部署服务就是在修改服务的配置文件<br>要运行最新参数，需要重启服<br>顺手将配置的服务加入到启动项中，保证重启后依然有效。</p></blockquote></blockquote><blockquote><p>远程传输命令 scp（secure copy） 是一个基于 SSH 协议在网络之间进行安全传输的命令，其格式为 <code>scp [参数] 本地文件 远程账户@远程IP地址：远程目录</code>。<br>  下载至本地<code>scp 远程账户@IP地址：远程目录 本地目录</code>，上传至远端<code>scp 本地文件 远程账户@远程IP地址：远程目录</code>。<br>  类似的参数有<code>rsync</code>，一般用于备份。<br>  scp 命令中可用的参数及作用如下：</p><blockquote><p>-v  显示详细的连接进度<br>-P 指定远程主机的sshd 端口号<br>-r 用于传送文件夹<br>-6 使用-IPV6</p></blockquote></blockquote><blockquote><p><code>screen</code> 可以用 -S 参数创建会话窗口；用 -d 参数将指定会话进行离线处理；用 -r 参数恢复指定会话； 用 -x 参数一次性恢复所有的会话；用 -ls 参数显示当前已有的会话； 以及用 -wipe 参数把目前无法使用的会话删除。</p><blockquote><p>attached 在线<br>detached 离线 </p></blockquote></blockquote><p>最后附上几张笔记：<br><img src="/img/9.28-1.jpg" alt="9.28笔记" title="9.28笔记"><br><img src="/img/9.28-2.jpg" alt="9.28笔记" title="9.28笔记"><br><img src="/img/9.28-3.jpg" alt="9.28笔记" title="9.28笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第十节课</title>
      <link href="/2019/09/28/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/28/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%8D%81%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月27日开始了第十节课，主要讲了<a href="https://www.linuxprobe.com/chapter-08.html" target="_blank" rel="noopener">第八章：Iptables与Firewalld防火墙</a>。讲述了 <code>iptables</code> <code>firewalld</code>(分为终端管理工具firewall-cmd 和 图形管理工具) 及服务的访问控制列表。 <a id="more"></a></p></blockquote><blockquote><p><code>iptables</code> 在早期的linxu 系统中，默认使用的是iptables 防火墙管理服务来配置防火墙。<br>iptables 服务把用于处理或过滤流量的策略条目称之为规则，多条规则可以组成一个规则链，而规则链则依据数据包处理位置的不同进行分类，具体如下：</p><blockquote><p>在进行路由选择前处理数据包（PREROUTING）；<br>处理流入的数据包（INPUT）；<br>处理流出的数据包（OUTPUT）；<br>处理转发的数据包（FORWARD）；<br>在进行路由选择后处理数据包（POSTROUTING）。</p></blockquote></blockquote><blockquote><p>  <code>动作</code>：ACCEPT（允许流量通过）；REJECT（拒绝流量通过）；LOG(记录日志信息)；DROP（拒绝流量通过）。<br>    <code>DROP</code> 直接将流量丢弃而且不响应；<br>    <code>REJECT</code>则会在拒绝流量后再回复一条“您的信息已收到，但被扔掉了”信息，从而让流量发送方清晰地看到数据被拒绝的响应信息。（考试使用reject，拒绝并回复）</p></blockquote><blockquote><p>iptables 中常用的参数以及作用：</p><blockquote><p>-P      设置默认策略<br>        -F          清空规则链<br>        -L      查看规则链<br>        -A      在规则链的末尾加入新规则<br>        -I num     在规则链的头部加入新规则<br>        -D num     删除某一条规则<br>        -s         匹配来源地址 IP/MASK，加叹号“！” 表示这个IP除外<br>        -d        匹配目标地址<br>        -i 网卡名称    匹配从这块网卡流入的数据<br>        -o 网卡名称  匹配从这块网卡流出的数据<br>        -p         匹配协议，如TCP，UDP，ICMP<br>        –dport num  匹配目标端口号<br>        –sport num     匹配来源端口号</p></blockquote></blockquote><blockquote><p><code>firewalld</code> rhel 7 系统中集成了多款防火墙管理工具，其中firewalld（Dynamic Firewall Manager of Linux systems,linux 系统的动态防火墙管理器）服务是默认的防火墙配置管理工具，它拥有基于CLI（command-line interface 命令行界面）和基于GUI（Graphical user interface 图形用户界面）两种管理方式。</p></blockquote><blockquote><p>有两种模式，<code>Runtime</code> 当前不生效，重启后会生效。 <code>Permanent</code> 当前暂时不生效，但是永久生效。 可使用 reload 可立即生效。</p></blockquote><blockquote><p><code>服务的访问控制列表</code> TCP Wrappers 是rhel 7 系统中默认启用的一款流量监控程序，它能够根据来访主机的地址与本机的目标服务程序作出允许或拒绝的操作。在配置TCP Wrappers服务时需要遵循两个原则：</p><blockquote><p>编写拒绝策略规则时，填写的是服务名称，而非协议名称；<br>建议先编写拒绝策略规则，再编写允许策略规则，以便直观地看到相应的效果。</p></blockquote></blockquote><p>最后附上几张笔记：<br><img src="/img/9.27-1.jpg" alt="9.27笔记" title="9.27笔记"><br><img src="/img/9.27-2.jpg" alt="9.27笔记" title="9.27笔记"><br><img src="/img/9.27-3.jpg" alt="9.27笔记" title="9.27笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第九节课</title>
      <link href="/2019/09/22/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%B9%9D%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/22/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%B9%9D%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月22日开始了第九节课，主要讲了<a href="https://www.linuxprobe.com/chapter-07.html" target="_blank" rel="noopener">第七章：使用RAID与LVM磁盘阵列技术</a>，主要讲述了 <code>几种常见的RAID：RAID 0, RAID 1, RAID 5, RAID 10</code> <code>如何部署磁盘阵列</code>  <code>损坏磁盘阵列及修复</code>  <code>磁盘阵列+备份盘</code> <code>LVM 逻辑卷管理器 的部署，扩容，缩小及删除</code>。 <a id="more"></a></p></blockquote><blockquote><p>RAID(独立冗余磁盘阵列)特点：可用性，安全；高性能，速度。<br>RAID 0 : 提升读取，写入速度的效果<br>RAID 1 ：安全性能高，成本高<br>RAID 5 ：妥协地兼顾了硬盘设备的读写速度，数据安全性与存储成本问题，利用奇偶校验和。<br>RAID 10：RAID 0 + RAID 1 技术的组合体，既提高了速度，又提高了安全性，较为常用。</p></blockquote><blockquote><p><code>部署磁盘阵列</code> <code>mdadm</code> 用于管理linux系统中的软件RAID 硬盘阵列，格式为 “mdadm [] &lt;RAID 设备名称&gt; [选项][成员设备名称]” ，mdadm 命令的常用参数和作用：<br>    <code>-a</code> 检测设备名称<br>    <code>-n</code> 指定设备数量<br>    <code>-l</code> 指定RAID级别，level<br>    <code>-C</code> 创建，create<br>    <code>-v</code> 显示过程<br>    <code>-f</code> 模拟设备损坏，faulty<br>    <code>-r</code> 移除设备，remove<br>    <code>-Q</code> 查看摘要信息，query<br>    <code>-D</code> 查看详细信息，detail<br>    <code>-S</code> 停止RAID 磁盘阵列，stop</p></blockquote><blockquote><p><code>磁盘阵列+备份盘</code> 参数 <code>-x</code> 表示有几块备份盘</p></blockquote><blockquote><p>任务<br> 复习：LVM  RAID<br> 预习：<br>    9.27 <a href="https://www.linuxprobe.com/chapter-08.html" target="_blank" rel="noopener">第八章：Iptables与Firewalld防火墙</a><br>    9.28 <a href="https://www.linuxprobe.com/chapter-09.html" target="_blank" rel="noopener">第九章：使用ssh服务管理远程主机</a><br>    9.29 <a href="https://www.linuxprobe.com/chapter-10.html" target="_blank" rel="noopener">第十章：使用Apache服务部署静态网站</a></p></blockquote><p>最后附上几张笔记：<br><img src="/img/9.22-1.jpg" alt="9.22笔记" title="9.22笔记"><br><img src="/img/9.22-2.jpg" alt="9.22笔记" title="9.22笔记"><br><img src="/img/9.22-3.jpg" alt="9.22笔记" title="9.22笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第八节课</title>
      <link href="/2019/09/21/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%85%AB%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/21/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%85%AB%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月21日开始了第八节课，讲了<a href="https://www.linuxprobe.com/chapter-06.html" target="_blank" rel="noopener">第六章：存储结构与磁盘划分</a>，主要包括 <code>物理设备的命名规则</code> <code>文件系统与数据资料</code> <code>挂载硬件设备</code> <code>添加硬盘设备</code> <code>添加交换分区</code> <code>磁盘容量配额</code> <code>软硬方式链接</code>。 <a id="more"></a></p></blockquote><blockquote><p><code>物理设备的命名规则</code>  一般的硬盘设备都会是以 “/dev/sd” 开头的，而一台主机上可以有多块硬盘，因此系统采用 a~p 来代表16块不通的硬盘(默认从a开始分配)，而且硬盘的分区编号也很有讲究：</p><blockquote><p>主分区或扩展分区的编号从1开始，到4结束；<br>逻辑分区从编号5开始。<br>    需要强调的一点：/dev目录中的 sda 设备之所以是 a，并不是由插槽决定的，而是由系统内核的识别顺序来决定的。<br>    所谓扩展分区，严格地将它并不是一个实际意义的分区，它仅仅是一个指向下一个分区的指针，这种指针结构将形成一个单向链表。</p></blockquote></blockquote><blockquote><p><code>文件系统与数据资料</code> 目前最常见的文件系统为 ext2 , ext3 , ext4 , XFS。其中 ext4 是rhel 6 系统中的默认文件管理系统；xfs 是一种高性能的日志文件系统，是 RHEL 7 中默认的文件管理系统。</p></blockquote><blockquote><p><code>挂载硬件设备</code> 将设备文件与某个目录相关联的动作，叫做挂载。然后就可以通过该目录（挂载点）访问/使用到设备文件的内容。</p><blockquote><p><code>mount</code> 用于挂载文件系统，格式为 “mount 文件系统 挂载目录”，常用的为 <code>-a</code> 参数，会在执行后自动检查 /etc/fstab 文件中有无疏漏被挂载的设备文件，如果有，则进行自动挂载操作。 <code>-t</code> 参数，指定文件系统的类型。<br><code>umount</code> 用于撤销已经挂载的设备文件，格式为 “umount [挂载点/设备文件]”</p></blockquote></blockquote><blockquote><p><code>添加硬盘设备</code></p><blockquote><p><code>fdisk</code> 用于管理磁盘分区，格式为 “fdisk [磁盘名称]”，提供了集添加、删除、转换分区等功能于一身的”一站式分区服务”。fdisk 命令中的参数以及作用：<br>        <code>m</code> 查看全部可用的参数<br>        <code>n</code> 添加新的分区<br>        <code>d</code> 删除某个分区信息<br>        <code>l</code> 列出所有可用的分区类型<br>        <code>t</code> 改变某个分区的类型<br>        <code>p</code> 查看分区信息<br>        <code>w</code> 保存并退出<br>        <code>q</code> 不保存直接退出<br>   有时系统会没有自动把分区信息同步给 linux 内核，而且这种情况似乎还比较常见，我们可以输入 <code>partprobe</code> 命令手动将分区信息同步到内核，一般执行两次后即可同步，若仍未同步，建议 <code>reboot</code> 。<br><code>du</code> 查看文件数据占用量，格式为 “du [选项] [文件]”，可以使用 <code>du -sh/*</code> 来查看在linux系统根目录下所有一级目录分别占用的空间大小。</p></blockquote></blockquote><blockquote><p><code>添加交换分区</code>  交换分区的创建过程与前面提到的基本一致，格式化命令需要使用 <code>mkswap</code></p></blockquote><blockquote><p><code>磁盘容量配额</code> </p><blockquote><p>可以使用quota 命令进行磁盘容量配额管理，从而限制用户的硬盘可用容量或所能创建的最大文件个数，quota命令还有软限制和应限制的功能。 首先需要让系统中的 /boot目录能够支持 quota 磁盘配额技术，需要更改配置文件/etc/fstab ，需要在defaults后面添加 <code>uquota</code>，早期的linux系统需要使用 <code>usrquota</code> 。<br><code>xfs_quota</code> 是一个专门针对 XFS 文件系统来管理 quota 磁盘容量配额服务而设计的命令，格式为 “xfs_quota [参数] 配额 文件系统”，<code>-c</code> 用于以参数的形式设置要执行的命令；<code>-x</code> 是专家模式，可用进行更复杂的配置。<br><code>edquota</code> 用于编辑用户的quota 配额限制，格式为 “edquota [参数] [用户]”，<code>-u</code> 是表示针对哪个用户，<code>-g</code> 表示针对哪个用户组</p></blockquote></blockquote><blockquote><p><code>软硬方式链接</code></p><blockquote><p>硬链接，hard link 类似于复制粘贴，但系统不为它分配独立的 inode 和文件，每添加一个硬链接，inode 连接数就会增加1<br>软链接，也叫符号链接 symbolic link,即快捷方式。<br>     <code>ln</code> 用于创建链接文件，格式为 “ln [选项] 目标”，ln 命令中可用的参数以及作用：<br>        <code>-s</code>  创建 “符号链接，软链接”，若不带 -s 参数，则默认创建硬链接<br>        <code>-f</code>  强制创建文件或目录的链接<br>        <code>-i</code>  覆盖前先询问<br>        <code>-v</code>  显示创建链接的过程</p></blockquote></blockquote><blockquote><p>任务<br> 复习：分区，格式化，挂载<br> 预习：9.22 <a href="https://www.linuxprobe.com/chapter-07.html" target="_blank" rel="noopener">第七章：使用RAID与LVM磁盘阵列技术</a></p></blockquote><p>最后附上几张笔记：<br><img src="/img/9.21-1.jpg" alt="9.21笔记" title="9.21笔记"><br><img src="/img/9.21-2.jpg" alt="9.21笔记" title="9.21笔记"><br><img src="/img/9.21-3.jpg" alt="9.21笔记" title="9.21笔记"><br><img src="/img/9.21-4.jpg" alt="9.21笔记" title="9.21笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第七节课</title>
      <link href="/2019/09/21/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%B8%83%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/21/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%B8%83%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月20日开始了第七节课，做了<a href="https://www.linuxprobe.com/chapter-05.html" target="_blank" rel="noopener">第五章：用户身份与文件权限</a>的收尾工作，主要讲述了 <code>文件的特殊权限</code> <code>文件的隐藏属性</code> <code>文件访问控制列表</code> <code>su命令与sudo服务</code> 及<a href="https://www.linuxprobe.com/chapter-06.html" target="_blank" rel="noopener">第六章：存储结构与磁盘划分</a>的第一小节 <code>一切从 / 开始</code>，简单讲述了下 <code>linux 系统中的文件存储结构</code>，<code>常见的目录名称及相应内容</code> 。 <a id="more"></a></p></blockquote><blockquote><p><code>SUID</code> 主要针对二进制可执行程序文件，让程序执行者，临时获取程序所有者的身份。(u+s,s,S,4)<br>    举例： <code>chmod u+s /wangmj</code>。若之前权限为 <code>rwx</code> ，则赋予了 <code>SUID 权限</code> 后，变为 <code>rws</code>，若之前权限为 <code>rw-</code>,则变为 <code>rwS</code> 。</p></blockquote><blockquote><p><code>SGID</code> 让程序执行者临时获取程序所有者的身份，让目录内的新建文件继承目录所有者的名称。(g+s,s,S,2)<br>    举例： <code>chmod -RF g+s /wangmj/</code></p></blockquote><blockquote><p><code>SBIT</code> 粘滞位，保护位。让目录内的文件，只能自己删除自己的。(o+t,t,T,1)<br>    举例： <code>chmod -R o+t /wangmj</code>,若之前权限为 <code>rwx</code> ，则赋予了 <code>SBIT 权限</code> 后，变为 <code>rwt</code>，若之前权限为 <code>rw-</code>,则变为 <code>rwT</code> 。</p></blockquote><blockquote><p><code>文件的隐藏属性</code> </p><blockquote><p><code>chattr</code> 用于设置文件的隐藏权限，格式为 “chattr [参数] 文件”，如果需要想要把某个隐藏的功能添加到文件上，则需要在命令后追加 “+参数” ，如果想要把某个隐藏功能移出文件，则需要追加 “-参数” 。chattr 命令中用于隐藏权限的参数及其作用如下：<br>        <code>i</code> 无法对文件进行修改；若对目录设置了该参数，则仅能修改其中的子文件内容而不能新建或删除文件<br>        <code>a</code> 仅允许补充(追加)内容，无法覆盖/删除内容（Append Only）<br>        <code>S</code> 文件内容在变更后立即同步到硬盘（sync）<br>        <code>s</code> 彻底从硬盘中删除，不可恢复（用0填充原文件所在硬盘区域）<br>        <code>A</code> 不再修改这个文件或目录的最后访问时间（atime）<br>        <code>b</code> 不再修改文件或目录的存取时间<br>        <code>D</code> 检查压缩文件中的错误<br>        <code>d</code> 使用dump 命令备份时忽略本文件/目录<br>        <code>c</code> 默认将文件或目录进行压缩<br>        <code>u</code> 当删除该文件后依然保留其在硬盘中的数据，方便日后恢复<br>        <code>t</code> 让文件系统支持尾部合并（tail-merging）<br>        <code>X</code> 可以直接访问压缩文件中的内容<br><code>lsattr</code> 用于显示文件的隐藏权限，格式为 “lsattr [参数] 文件”</p></blockquote></blockquote><blockquote><p><code>文件访问控制列表</code> （file access control list）</p><blockquote><p><code>setfacl</code> 用于管理文件的ACL规则，格式为 “setfacl [参数] 文件名称”。针对目录文件需要使用 -R 递归参数；针对普通文件则使用 -m 参数；如果想要删除某个文件的ACL，则可以使用 -b 参数。<br><code>getfacl</code> 用于显示文件上设置的ACL信息，格式为 “getfacl 文件名称”。</p></blockquote></blockquote><blockquote><p><code>su</code>命令 与 <code>sudo</code>服务 :</p><blockquote><p>su命令可以解决切换用户身份的需求<br>sudo 命令用于给普通用户提供额外的权限来完成原本root管理员才能完成的任务，格式为 “sudo [参数] 命令名称”。</p></blockquote></blockquote><blockquote><p><code>一切从 / 开始</code> linux 系统中常见的目录名称以及相应内容：</p><blockquote><p><code>/boot</code> 开机所需文件–内核、开机菜单以及所需配置文件等<br><code>/dev</code>  以文件形式存放任何设备与接口<br><code>/etc</code>  配置文件<br><code>/home</code> 用户家目录<br><code>media</code> 用于挂载设备文件的目录<br><code>/root</code> 系统管理员的家目录<br><code>/proc</code> 虚拟文件系统，例如系统内核、进程、外部设备及网络状态等<br><code>/var</code>  主要存放经常变化的文件，如日志</p></blockquote></blockquote><blockquote><p>任务<br> 复习：<a href="https://www.linuxprobe.com/chapter-05.html" target="_blank" rel="noopener">第五章：用户身份与文件权限</a><br> 预习：<a href="https://www.linuxprobe.com/chapter-06.html" target="_blank" rel="noopener">第六章：存储结构与磁盘划分</a></p></blockquote><p>最后附上几张笔记：<br><img src="/img/9.20-1.jpg" alt="9.20笔记" title="9.20笔记"><br><img src="/img/9.20-2.jpg" alt="9.20笔记" title="9.20笔记"><br><img src="/img/9.20-3.jpg" alt="9.20笔记" title="9.20笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第六节课</title>
      <link href="/2019/09/16/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%85%AD%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/16/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%85%AD%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月15日开始了第六节课，做了<a href="https://www.linuxprobe.com/chapter-04.html" target="_blank" rel="noopener">第四章：Vim编辑器与Shell命令脚本</a>的收尾，主要包括 <code>for条件循环语句</code> <code>while条件循环语句</code> <code>case条件测试语句</code>以及 <code>计划任务服务程序</code> ，然后讲了<a href="https://www.linuxprobe.com/chapter-05.html" target="_blank" rel="noopener">第五章：用户身份与文件权限</a>的 <code>用户身份与能力</code>以及 <code>文件权限与归属</code>部分。 <a id="more"></a></p></blockquote><blockquote><p><code>for条件循环语句</code> 允许脚本一次性读取多个信息，然后逐一对信息进行操作处理，当要处理的数据有范围时，使用for循环语句再合适不过了。for 循环语句的语法格式如下：<br>        <code>for</code> 变量名 <code>in</code> 取值列表<br>        <code>do</code><br>            命令序列<br>        <code>done</code></p></blockquote><blockquote><p><code>while条件循环语句</code>  一种让脚本根据某些条件来重复执行命令的语句，它的循环结构往往在执行前并不确定最终执行的次数，完全不同于 <code>for 循环语句</code>中有目标、有范围的使用场景。while 循环语句通过判断条件测试的真假来决定是否继续执行命令，若条件为真就继续执行，为假就结束循环。while 语句的语法格式如下：<br>        <code>while</code> 条件测试操作<br>        <code>do</code><br>        命令序列<br>        <code>done</code></p></blockquote><blockquote><p><code>case条件测试语句</code> case语句是在多个范围内匹配数据，若匹配成功则执行相关命令并结束整个条件测试；而如果数据不在所列出的范围内，则会去执行星号（*）中所定义的默认命令。case命令的语法结构如下：<br>        <code>case</code> 变量值 <code>in</code><br>        模式1)<br>            命令序列1<br>            ;;<br>        模式2)<br>            命令序列2<br>            ;;<br>            ……<br>        *)<br>            默认命令序列<br>        <code>esac</code></p></blockquote><blockquote><p><code>计划任务服务程序</code> 计划任务分为一次性计划任务与长期性计划任务：</p><blockquote><p><code>一次性计划任务</code>：只执行一次，一般用于满足临时的工作需求。可以使用 <code>at</code> 命令实现该功能。 只需要写成 <code>at 时间</code> 的形式就可以。如果想要查看已设置好但仍未执行的一次性计划任务，可以使用 <code>at -l</code> 命令；要想将其删除，可以使用 <code>atrm 任务序号</code>，或者 <code>at -r</code>。 也可以结合之前的 <code>管道符</code> 来创建，例如 ：<code>echo &quot;reboot&quot; | at 20:22</code> 。<br><code>长期性计划任务</code>：若希望linux 系统能否周期性地、有规律地执行某些具体的任务，那么则需要使用 <code>crond 服务</code> 。创建、编辑计划任务的命令为 <code>crontab -e</code>，查看当前计划任务的命令为 <code>crontab -l</code>,删除某条计划任务的命令为 <code>crontab -r</code>。若当前为管理员身份，还可以在 crontab 命令中加上 <code>-u</code> 参数来他人的计划任务。crond 服务设置任务的参数格式为 : <code>分 时 日 月 星期 命令</code>，若有些字段未设置，则需要使用星号（<em>）来占位，其中 *日</em>和<em>星期</em>字段不能同时使用，否则可能会产生冲突。 在crond 服务的计划任务参数中，<code>所有的命令一定要用绝对路径的方式</code>来写，绝对路径可以使用 <code>whereis</code> 来查询。<br><code>crond</code> 服务  <code>crontab</code> 配置工具</p></blockquote></blockquote><blockquote><p><code>用户身份与能力</code><br>    linux 系统中有三类用户：<br>    1. 管理员 root  UID 0<br>    2. 系统用户 rhel 5/6 ，UID 1-499；rhel 7，UID 1-999<br>    3. 普通用户 rhel 5/6 ，UID 500-65535；rhel 7，UID 1000-65535<br><code>useradd</code> 用于创建新的用户，格式为 <code>useradd [选项] 用户名</code>，useradd 命令中的用户参数以及作用：</p><blockquote><p><code>-d</code> 指定用户的家目录（默认为/home/username）<br><code>-e</code> 账户的到期时间，格式为 YYYY-MM-DD<br><code>-u</code> 指定该用户的默认UID<br><code>-g</code> 指定一个初始的用户基本组（必须已存在）<br><code>-G</code> 指定一个或多个扩展用户组<br><code>-N</code> 不创建与用户同名的基本用户组<br><code>-s</code> 指定该用户的默认Shell 解释器<br><code>groupadd</code> 用于创建用户组，格式为 “groupadd [选项] 群组名”<br><code>usermod</code> 用于修改用户的属性，格式为 “usermod [选项] 用户名”。用户的信息保存在 /etc/passwd 文件中，可以直接用文本编辑器来修改其中的用户参数项目，也可以用 usermod 命令修改已经创建的用户信息。 usermod 命令的参数及作用如下：<br><code>-c</code> 填写用户账户的备注信息<br><code>-d -m</code> 参数 -m 与参数 -d 连用，可重新指定用户的家目录并自动把旧的数据转移过去<br><code>-e</code> 账户的到期时间，格式为 YYYY-MM-DD<br><code>-g</code> 变更所属用户组<br><code>-G</code> 变更扩展用户组<br><code>-L</code> 锁定用户禁止其登录系统 Lock<br><code>-U</code> 解锁用户，允许其登录系统 unlock<br><code>-s</code> 变更默认终端<br><code>-u</code> 修改用户的UID<br>    <em>若不小心 <code>usermod -L root</code> 导致 root 用户无法登录，此时可采用重置密码恢复。</em><br><code>passwd</code> 用于修改用户密码、过期时间、认证信息等，格式为 “passwd [选项][用户名]”，普通用户可以修改自身密码，root用户可以修改其他所有人的密码。passwd 命令中可用的参数以及作用如下：<br><code>-l</code> 锁定用户，禁止其登录<br><code>-u</code> 解除锁定，允许用户登录<br><code>--stdin</code> 允许通过标准输入修改用户密码，如 <code>echo &quot;benben&quot; | passwd --stdin zhangc</code><br><code>-d</code> 使该用户可用空密码登录系统<br><code>-e</code> 强制用户在下次登录时修改密码<br><code>-s</code> 显示用户的密码是否被锁定，以及密码所采用的加密算法名称 status<br><code>userdel</code> 用于删除用户，格式为 “userdel [选项] 用户名”，在执行删除操作时，该用户的家目录默认会保留下来，此时可以使用 <code>-r</code> 参数将其删除。若起初未删除家目录，后续可以使用 <code>rm -rf /user</code> 来删除</p></blockquote></blockquote><blockquote><p><code>文件权限与归属</code><br> linux 系统中一切都是文件，但每个文件的类型不尽相同，因此linux 系统使用了不同的字符来加以区分，常见的字符如下：<br><code>-</code>: 普通文件<br><code>d</code>：目录文件 directory<br><code>l</code>：链接文件 link<br><code>b</code>：块设备文件 block device<br><code>c</code>：字符设备文件 character device<br><code>p</code>：管道文件 pipeline<br> 在linux 系统中，每个文件都有所属的所有者和所有组，并且规定了文件的所有者、所有组以及其他人对文件所拥有的可读（r）、可写（w）、可执行（x）等权限。<br> 对文件来说，可读表示能够读取文件的实际内容，可写表示能够编辑、新增、修改、删除文件的实际内容，可执行则表示能够运行一个脚本程序；<br> 对目录文件来说，可读表示能够读取目录内的文件列表，可写表示能够在目录内新增、删除、重命名文件，而可执行则表示能够进入该目录。<br> 文件的读、写、执行权限可简写为 rwx ，也可用数字 421 表示，若无相应权限，必须用 <code>-</code> 表示，不能使用空格或者其他字符代替。</p></blockquote><blockquote><p>任务<br> 复习：<a href="https://www.linuxprobe.com/chapter-04.html" target="_blank" rel="noopener">第四章：Vim编辑器与Shell命令脚本</a>  以及 rwx &lt;–&gt; 421 的互相转化<br> 预习：<br>    9.20 <a href="https://www.linuxprobe.com/chapter-05.html" target="_blank" rel="noopener">第五章：用户身份与文件权限</a><br>    9.21 <a href="https://www.linuxprobe.com/chapter-06.html" target="_blank" rel="noopener">第六章：存储结构与磁盘划分</a><br>    9.22 <a href="https://www.linuxprobe.com/chapter-07.html" target="_blank" rel="noopener">第七章：使用RAID与LVM磁盘阵列技术</a></p></blockquote><p>最后附上几张笔记：<br><img src="/img/9.15-1.jpg" alt="9.15笔记" title="9.15笔记"><br><img src="/img/9.15-2.jpg" alt="9.15笔记" title="9.15笔记"><br><img src="/img/9.15-3.jpg" alt="9.15笔记" title="9.15笔记"><br><img src="/img/9.15-4.jpg" alt="9.15笔记" title="9.15笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第五节课</title>
      <link href="/2019/09/14/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%BA%94%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/14/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%BA%94%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月14日开始了第五节课，讲述了<a href="https://www.linuxprobe.com/chapter-04.html" target="_blank" rel="noopener">第四章：Vim编辑器与Shell命令脚本</a>的大部分内容，主要有 <code>vim 文本编辑器的使用</code> <code>配置主机名称</code> <code>配置网卡信息</code> <code>配置yum仓库</code> <code>编写shell脚本</code>以及 <code>流程控制语句</code>中的 <code>if条件测试语句</code>。<a id="more"></a></p></blockquote><blockquote><p><code>vim 文件编辑器</code> 有三种模式，分别为:<br>   命令模式：控制光标移动，可对文本进行复制、粘贴、删除和查找等工作。（按 a[光标后面一位] o[光标下一行] i[光标位置] 进行输入模式，按：进行末行模式）<br>   输入模式：正常的文本录入（按esc进入命令模式）<br>   末行模式：保存或退出文档，以及设置编辑环境（按esc 进入命令模式）</p><blockquote><p>命令模式中最常用的一些命令：<br>    <code>dd</code>  删除（剪切）光标所在整行<br>    <code>5dd</code> 删除（剪切）从光标处开始的5行<br>    <code>yy</code>  复制光标所在整行<br>    <code>5yy</code> 复制从光标处开始的5行<br>    <code>n</code>   显示搜索命令定位到的下一个字符串<br>    <code>N</code>   显示搜索命令定位到的上一个字符串<br>    <code>u</code>      撤销上一步的操作<br>    <code>p</code>   将之前删除（dd）或复制(yy)过的数据粘贴到光标后面<br>末行模式中可用的命令如下：<br>      <code>:w</code>  保存<br>    <code>:q</code>  退出<br>    <code>:q!</code> 强制退出（放弃对文档的修改内容）<br>    <code>:wq!</code> 强制保存退出<br>    <code>:set nu</code> 显示行号<br>    <code>:set nonu</code> 不显示行号<br>    <code>:命令</code> 执行该命令<br>    <code>:整数</code> 跳转到该行<br>    <code>:s/one/two</code> 将当前光标所在行的第一个one替换成two<br>    <code>:s/one/two/g</code>将当前光标所在行的所有one替换成two<br>    <code>:%s/one/two/g</code> 将全文中的所有one替换成two<br>    <code>?字符串</code> 在文本中从下至上搜索该字符串<br>    <code>/字符串</code> 在文本中从上至下搜索该字符串</p></blockquote></blockquote><blockquote><p><code>配置主机名称</code> 文件位置，/etc/hostname,重启服务器后才可生效</p></blockquote><blockquote><p><code>配置网卡信息</code> /etc/sysconfig/network-scripts/ifcfg-* ，配置完成后重启网卡才可生效 <code>systemctl restart network</code></p></blockquote><blockquote><p><code>配置yum软件仓库</code> /etc/yum.repos.d目录下， 新建一个配置文件，例如 rhel7.repo ,配置文件如下：</p><blockquote><ul><li>[rhel-media]  yum软件仓库唯一标识符，避免与其他仓库冲突。</li><li>name=wangmj   yum软件仓库的名称描述，易于识别仓库用处。</li><li>baseurl=file:///media/cdrom 提供的方式包括FTP（ftp://..）、HTTP(htpp://..)、本地（file:///..）</li><li>enabled=1  设置此源是否可用；1为可用，0为禁用</li><li>gpgcheck=1 设置此源是否校验文件；1为校验，0为禁用</li><li>gpgkey=file:///media/cdrom/RPM-GPG-KEY-redhat-release 若上面参数开启校验，那么请指定公钥文件地址。<br>按配置参数的路径挂载光盘，并把光盘挂载信息写入到/etc/fstab文件中<br>使用    <code>yum install httpd -y</code> 命令检查 yum 软件仓库是否可用</li></ul></blockquote></blockquote><blockquote><p><code>编写shell脚本</code><br>  shell脚本中需要三种不同的元素，分别为 <code>脚本的声明</code>（#!/bin/bash） <code>脚本的注释</code>(# xx)  <code>脚本的命令</code> (eg: pwd)<br>  shell 脚本语言内设了用于接收参数的变量，变量之间可用使用空格间隔。<code>$0</code>对应的是当前shell脚本程序的名称， <code>$#</code>对应的是总共有几个参数， <code>$*</code>对应的是所有位置的参数值， <code>$？</code>对应的是显示上一次命令的执行返回值，<code>$1,$2,$3...</code>则分别对应着第N个位置的参数值。</p></blockquote><blockquote><p><code>判断用户的参数</code><br>  文件测试所用的参数：<br>    <code>-d</code> （directory)  测试文件是否为目录类型<br>    <code>-e</code>  (exist)      测试文件是否存在<br>    <code>-f</code>  (file)       判断是否为一般文件<br>    <code>-r</code>  (read)       测试当前用户是否有权限读取<br>    <code>-w</code>  (write)       测试当前用户是否有权限写入<br>    <code>-x</code>  (execute)       测试当前用户是否有权限执行<br>   $?  输出0 ，则成功；输出非0 ，则失败。<br>   <code>与，&amp;&amp;</code>，当前面的命令执行成功后才会执行它后面的命令<br>   <code>或，||</code>，当前面的命令执行失败后才会执行它后面的命令<br>   <code>非，！</code>，把条件测试中的判断结果取相反值<br>   可用的整数比较运算符：<br>    <code>-eq</code> 是否等于(equal)<br>    <code>-ne</code> 是否不等于(not equal)<br>    <code>-gt</code> 是否大于（greater than）<br>    <code>-lt</code> 是否小于（less than）<br>    <code>-le</code> 是否小于等于（less equal）<br>    <code>-ge</code> 是否大于等于（greater equal）<br>    常用的字符串比较运算符：<br>    <code>=</code>  比较字符串内容是否相同<br>    <code>!=</code> 比较字符串内容是否不同<br>    <code>-z</code> 判断字符串内容是否为空</p></blockquote><blockquote><p><code>if条件测试语句</code><br>  if语句分为单分支结构，双分支结构，多分支结构。<br>    if单分支由<code>if</code> <code>then</code> <code>fi</code> 组成,相当于 “如果…那么…”<br>    if双分支主要是由 <code>if</code> <code>then</code> <code>else</code> <code>fi</code> 关键词组成，相当于”如果…那么…或者…那么…”<br>    if多分支由 <code>if</code> <code>then</code> <code>elif</code> <code>fi</code>关键词组成，相当于”如果…那么…如果…那么…”</p></blockquote><blockquote><p>任务<br> 复习：vim文本编辑器  if条件测试语句<br> 预习：<a href="https://www.linuxprobe.com/chapter-05.html" target="_blank" rel="noopener">第五章：用户身份与文件权限</a></p></blockquote><p>最后附上几张笔记：<br><img src="/img/9.14-1.jpg" alt="9.14笔记" title="9.14笔记"><br><img src="/img/9.14-2.jpg" alt="9.14笔记" title="9.14笔记"><br><img src="/img/9.14-3.jpg" alt="9.14笔记" title="9.14笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第四节课</title>
      <link href="/2019/09/14/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%9B%9B%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/14/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E5%9B%9B%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月13日开始了第四节课，讲述了<a href="https://www.linuxprobe.com/chapter-02.html" target="_blank" rel="noopener">第二章：新手必须掌握的Linux命令</a>中的剩余内容，主要是 <code>tar</code> <code>grep</code> <code>find</code> 命令，以及<a href="https://www.linuxprobe.com/chapter-03.html" target="_blank" rel="noopener">第三章：管道符、重定向与环境变量</a>整章。 <a id="more"></a></p></blockquote><blockquote><p><code>tar</code> 用于对文件进行打包压缩或解压，格式为 “tar [选项] [文件]”，tar 命令的参数及其作用如下：</p><blockquote><p><code>-c</code> 创建压缩文件<br><code>-x</code> 解开压缩文件<br><code>-t</code> 查看压缩包内有哪些文件<br><code>-z</code> 用Gzip压缩或解压<br><code>-j</code> 用bzip2压缩或者解压<br><code>-v</code> 显示压缩或解压的过程<br><code>-f</code> 目标文件名<br><code>-p</code> 保留原始的权限或属性<br><code>-P</code> 使用绝对路径来压缩<br><code>-C</code> 指定解压到的目录<br>压缩文件一般为： <code>tar -czvf</code> （Gzip格式）        <code>tar -cjvf</code>（bzip2格式）<br>解压文件一般为： <code>tar -xzvf</code> （Gzip格式）        <code>tar -xjvf</code>（bzip2格式）</p></blockquote></blockquote><blockquote><p><code>grep</code> 用于在文本中执行关键词搜索，并显示匹配的结果，格式为 “grep [选项] [文件]”，grep 命令的参数及其作用如下：</p><blockquote><p><code>-b</code> (–byte-offset)  将可执行文件（binary）当作文本文件（text）来搜索<br><code>-c</code> (–count)        仅显示找到的行数<br><code>-i</code> (–ignore-case)  忽略大小写<br><code>-n</code> (–line-number)  显示行号<br><code>-v</code> (–invert-match) 反向选择-仅列出没有”关键词”的行</p></blockquote></blockquote><blockquote><p><code>find</code> 用于按照指定条件来查找文件，格式为 “find [查找路径] 寻找条件 操作”，find 命令中的参数以及作用:</p><blockquote><p><code>-name</code>         匹配名称<br><code>-perm</code>         匹配权限（mode 为完全匹配，-mode 为包含即可)<br><code>-user</code>         匹配所有者<br><code>-group</code>        匹配所有组<br><code>-mtime -n +n</code>  匹配修改内容的时间（-n 指n天之内，+n 指n天之前）<br><code>-atime -n +n</code>  匹配访问内容的时间（-n 指n天之内，+n 指n天之前）<br><code>-ctime -n +n</code>  匹配修改文件权限的时间（-n 指n天之内，+n 指n天之前）<br><code>-nouser</code>       匹配无所有者的文件<br><code>-nogroup</code>      匹配无所有组的文件<br><code>-newer f1 !f2</code> 匹配比文件f1 新但比f2 旧的文件<br><code>--type b/d/c/p/l/f</code> 匹配文件类型（后面的字母参数依次表示块设备、目录、字符设备、管道、链接文件、文本文件）<br><code>-size</code> 匹配文件的大小（+50KB为查找超过50KB的文件，而-50KB为查找小于50KB的文件）<br><code>-prune</code> 忽略某个目录<br><code>-exec ...... { } \</code>; 后面可跟用于进一步处理搜索结果的命令</p></blockquote></blockquote><blockquote><p><code>输入输出重定向</code><br>  覆盖写入  <code>&gt;</code>  <code>2&gt;</code><br>  追加写入  <code>&gt;&gt;</code>  <code>2&gt;&gt;</code><br>  其中<code>2&gt;</code> <code>2&gt;&gt;</code> 为错误输出重定向</p></blockquote><blockquote><p><code>管道符（任意门）</code> | ，可以与其他命令组合使用，功能强大。以修改密码为例：<code>echo &quot;redhat&quot; | passwd --stdin root</code> ,此命令可以将 root 用户密码直接改为 redhat。</p></blockquote><blockquote><p><code>命令行的通配符</code> 通配符就是通用的匹配信息的符号，比如 <code>*</code> 代表匹配零个或多个字符，<code>?</code> 代表匹配单个字符，中括号内加上数字[0-9]代表匹配0-9之间的单个数字的字符，而中括号内加上字母[abc]则是代表匹配a、b、c 三个字符中的任意一个字符。  </p><blockquote><p><strong>此处有个问题，无法直接匹配两位数，只能一位一位匹配，比如15 ，用[0-20]无法匹配，需要[0-9][0-9]</strong></p></blockquote></blockquote><blockquote><p><code>常用的转义字符</code> 转义字符较多，此处只介绍4个常用的，如下:</p><blockquote><p>反斜杠（\） 使反斜杠后面的一个变量变为单纯的字符串。<br>单引号（’’）转义其中所有的变量为单纯的字符串。<br>双引号（””) 保留其中的变量属性，不进行转义处理。<br>反引号（``）把其中的命令执行后返回结果。</p></blockquote></blockquote><blockquote><p><code>重要的坏境变量</code><br>  <code>export 变量</code> ，将局部变量提升为全局变量<br>  linux 系统中最重要的10个环境变量：</p><blockquote><p><code>HOME</code>  用户的主目录（即家目录）<br><code>SHELL</code> 用户在使用的Shell解释器名称<br><code>HISTSIZE</code> 输出的历史命令记录条数<br><code>HISTFILESIZE</code> 保存的历史命令记录条数<br><code>MAIL</code> 邮件保存路径<br><code>LANG</code> 系统语言、语系名称<br><code>RANDOM</code> 生成一个随机数字<br><code>PS1 Bash</code> 解释器的提示符<br><code>PATH</code> 定义解释器搜索用户执行命令的路径<br><code>EDITOR</code> 用户默认的文本编辑器</p></blockquote></blockquote><blockquote><blockquote><p><code>alias</code>  创建一个属于自己的命令别名，格式为 “alias 别名=命令”，例如：<code>alias cd= rm -f</code>。若要取消一个命令别名，则是用 <code>unalias</code>,格式为 “unalias 别名”。</p></blockquote></blockquote><blockquote><p>任务<br> 复习：写笔记，输出重定向，通配符<br> 预习：<a href="https://www.linuxprobe.com/chapter-04.html" target="_blank" rel="noopener">第四章：Vim编辑器与Shell命令脚本</a></p></blockquote><p>最近附上笔记：<br><img src="/img/9.13-1.jpg" alt="9.13笔记" title="9.13笔记"><br><img src="/img/9.13-2.jpg" alt="9.13笔记" title="9.13笔记"><br><img src="/img/9.13-3.jpg" alt="9.13笔记" title="9.13笔记"><br><img src="/img/9.13-4.jpg" alt="9.13笔记" title="9.13笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第三节课</title>
      <link href="/2019/09/09/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%B8%89%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/09/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%B8%89%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月8号开始了第三节课，讲述了<a href="https://www.linuxprobe.com/chapter-02.html" target="_blank" rel="noopener">第二章：新手必须掌握的Linux命令</a>中的大部分内容。涉及到的命令如下：<code>reboot</code> <code>poweroff</code> <code>wget</code> <code>ps</code> <code>top</code> <code>pidof</code> <code>kill</code> <code>killall</code> <code>ifconfig</code> <code>uname</code> <code>uptime</code> <code>free</code> <code>who</code> <code>last</code> <code>history</code> <code>sosreport</code> <code>pwd</code> <code>cd</code> <code>ls</code> <code>cat</code> <code>more</code> <code>head</code> <code>tail</code> <code>tr</code> <code>wc</code> <code>stat</code> <code>cut</code> <code>diff</code> <code>touch</code> <code>mkdir</code> <code>cp</code> <code>mv</code> <code>rm</code> <code>dd</code> <code>file</code> 等命令。 <a id="more"></a></p></blockquote><blockquote><p><code>reboot</code> 重启</p></blockquote><blockquote><p><code>poweroff</code> 关机</p></blockquote><blockquote><p><code>wget</code>: 用于在终端中下载网络文件， 格式为 “wget [参数] 下载地址”,<code>wget</code> 命令的参数以及作用如下：</p><blockquote><p><code>-b</code>  后台下载模式<br><code>-P</code>  下载到指定目录<br><code>-t</code>  最大尝试次数<br><code>-c</code>  断点续传<br><code>-p</code>  下载页面内所有资源，包括图片、视频等。<br><code>-r</code>  递归下载</p></blockquote></blockquote><blockquote><p><code>ps</code>:用于查看系统中的进程状态，格式为 “ps [参数]”，ps 命令的参数以及作用如下：</p><blockquote><p><code>-a</code> 显示所有进程（包括其他用户的进程）<br><code>-u</code> 用户以及其他详细信息<br><code>-x</code> 显示没有控制终端的进程<br>一般三者结合管道符使用：<code>ps aux | grep 进程名</code> <br><br>linux系统中有 <strong>5</strong> 种常见的进程状态,分别如下：<br>R（running,运行）：进程正在运行或在运行队列中等待。<br>S（sleeping，中断）：进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该状态。<br>D（disk sleep,uninterruptible sleep，不可中断）：进程不响应系统异步信号，即使用kill命令也不能将其中断。<br>Z（zombie，僵死）：进程已经终止，但进程描述符依然存在，直到父进程调用 <code>wait4()</code> 系统函数后将进程释放。<br>T (stopped)：进程收到停止信号后停止运行。 </p></blockquote></blockquote><blockquote><p><code>top</code>:用于动态地监视进程活动与系统负载等信息，其格式为 <code>top</code>。如图：<img src="/img/top.png" alt="top" title="top"><br><code>top</code> 命令执行结果的前五行为系统整体的统计信息，其所代表的含义如下。</p><ul><li>第一行：系统时间、运行时间、登陆终端数、系统负载（三个数值分别为1分钟、5分钟、15分钟内的平均值，数值越小意味着负载越低）。</li><li>第二行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。</li><li>第三行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲的资源百分比等。</li><li>第四行：物理内存总量、内存使用量、内存空闲量、作为内核缓存的内存量。</li><li>第五行：虚拟内存总量、虚拟内存使用量、虚拟内存空闲量、已被提前加载的内存量。</li></ul></blockquote><blockquote><p><code>pidof</code>:用于查询某个指定服务进程的PID值，格式为 “pidof [参数][服务名称]”。<br><code>kill</code>:用于终止某个指定PID的服务进程（可使用<code>pidof</code>查询），格式为 “kill [参数][进程PID]”<br><code>killall</code>:用于终止某个指定名称的服务所对应的全部进程（不止一个进程），格式为 “killall [参数][服务名称]”</p></blockquote><blockquote><p><code>ifconfig</code>:用于获取网卡配置与网络状态等信息，格式为 “ifconfig [网络设备] [参数]”。主要查看的是 网卡名称、inet后面的IP地址、ether后面的mac地址、以及RX、TX的接收数据包与发送数据包的个数及累计流量。如图: <img src="/img/ifconfig.png" alt="ifconfig" title="ifconfig"></p></blockquote><blockquote><p><code>uname</code>:用于查看系统内核与系统版本等信息，格式为 “uname [-a]”。可查看当前系统的内核名称、主机名、内核发行版本、节点名、系统时间、硬件名称、硬件平台、处理器类型以及操作系统名称等信息。若要查看当前系统版本的详细信息，可使用 <code>cat /etc/redhat-release</code>。如图：<img src="/img/uname.png" alt="uname" title="uname"></p></blockquote><blockquote><p><code>uptime</code>:用于查看系统的负载信息，格式为 uptime。即为简化版的 <code>top</code>。</p></blockquote><blockquote><p><code>free</code>:用于显示当前系统中内存的使用量信息，格式为 “free [-h]”。</p></blockquote><blockquote><p><code>who</code>:用于查看当前登入主机的用户终端信息，格式为 “who [参数]”，若要注销掉其他终端，可查看当前sshd进程的所有PID，根据IP地址或者pts kill掉即可，前提是你使用的需要是管理员账户。如图:<img src="/img/who.png" alt="who" title="who"></p></blockquote><blockquote><p><code>last</code>:用于查看所有系统的登录记录，格式为： “last [参数]”。但日志文件可以更改，仅作参考。</p></blockquote><blockquote><p><code>history</code>:用于显示历史执行过的命令，格式为 “history [-c]”。日志文件在 <code>~/.bash_history</code>,也可以更改，仅供参考。</p></blockquote><blockquote><p><code>sosreport</code>:用于收集系统配置及架构信息并输出诊断文档，格式为 “sosreport”。</p></blockquote><blockquote><p><code>pwd</code>：显示用户当前所处的工作目录，格式为 “pwd [选项]”。</p></blockquote><blockquote><p><code>cd</code>：用于切换工作路径，格式为 “cd [目录名称]”。</p><blockquote><p><code>cd -</code> 返回到上一次所在的目录<br><code>cd ~</code> 切换到当前用户的家目录<br><code>cd ..</code>切换到上级目录</p></blockquote></blockquote><blockquote><p><code>ls</code>:用于显示目录中的文件信息，格式为 “ls [选项][文件]”。使用ls 命令的 <code>-a</code>参数看到全部文件（包括隐藏文件），使用 <code>-l</code> 参数可以查看文件的属性、大小等详细信息。故常用 <code>ls -al</code></p></blockquote><blockquote><p><code>cat</code>：用于查看纯文本文件（内容较小的)，格式为 “cat [选项][文件]”。<br><code>more</code>:用于查看纯文本文件（内容较多的），格式为 “more [选项][文件]”</p></blockquote><blockquote><p><code>head</code>:用于查看纯文本文档的前N行，格式为 “head [选项][文件]”。例如:<code>head -n 20 initial-setup-ks.cfg</code><br><code>tail</code>:用于查看纯文本文档的后N行或持续刷新的内容，格式为 “tail [选项][文件]”。查看后n行，操作与<code>head</code>类似；持续刷新文件内容，使用 <code>tail -f 文件名</code>。</p></blockquote><blockquote><p><code>tr</code>:用于替换文本文件中的字符，格式为 “tr [原始字符][目标字符]”</p></blockquote><blockquote><p><code>wc</code>：用于统计指定文本的行数、字数、字节数，格式为 “wc [参数][文本]”。wc 的参数以及相应的作用如下：</p><blockquote><p><code>-l</code> 只显示行数 lines<br><code>-w</code> 只显示单词数 words<br><code>-c</code> 只显示字节数 bytes</p></blockquote></blockquote><blockquote><p><code>stat</code>：用于查看文件的具体存储信息和时间等信息，格式为 “stat 文件名称”。有三种时间状态，Access，Modify，Change。atime 和 mtime 可利用 <code>touch</code>修改，ctime 无法修改。</p><blockquote><p>Access:最后一次访问文件内容的时间<br>Modify:最后一次修改文件内容的时间<br>Change:最后一次修改文件属性或权限信息的时间。</p></blockquote></blockquote><blockquote><p><code>cut</code>：用于按”列”提取文本字符，格式为 “cut [参数] 文本”。</p></blockquote><blockquote><p><code>diff</code>:用于比较多个文本文件的差异，格式为 “diff [参数] 文件”。在使用 <code>diff</code>命令时，不仅可以使用 <code>--brief</code>（短格式为<code>-q</code>） 参数来确认两个文件是否不同，还可以使用 <code>-c</code>参数来详细比较出多个文件的差异之处，可用来判断文件是否被篡改。</p></blockquote><blockquote><p><code>touch</code>:用于创建空白文件或设置文件的时间，格式为 “touch [选项][文件]”<br>  <code>touch</code> 命令的参数及其作用：</p><blockquote><p><code>-a</code> 仅修改”读取时间”（atime,access）<br><code>-m</code> 仅修改”修改时间”（mtime，modify）<br><code>-d</code> 同时修改 atime 和 mtime</p></blockquote></blockquote><blockquote><p><code>mkdir</code>: 用于创建空白的目录，格式为 “mkdir [选项][目录]”，还可以结合 <code>-p</code>(parents)参数来递归创建出具有嵌套叠层关系的文件目录。</p></blockquote><blockquote><p><code>cp</code>：用于复制文件或目录，格式为 “cp [选项] 源文件 目标文件”。cp命令的参数及作用如下：</p><blockquote><p><code>-p</code>  保留原始文件的属性<br><code>-d</code>  若对象为”链接文件”，则保留该”链接文件”的属性<br><code>-r</code>  递归持续复制（用于目录）<br><code>-i</code>  若目录文件存在则询问是否覆盖<br><code>-a</code>  相当于 <code>-pdr</code> （p、d、r 为上述参数）</p></blockquote></blockquote><blockquote><p><code>mv</code>：用于剪切文件或者文件重命名，格式为 “mv [选项] 源文件 [目标路径 | 目标文件名]”。</p></blockquote><blockquote><p><code>rm</code>: 用于删除文件或目录，格式为 “rm [选项] 文件”，加 <code>-f</code>(force)参数来强制删除，删除目录则要加 <code>-r</code> 参数。</p></blockquote><blockquote><p><code>dd</code>：用于按照指定大小和个数的数据块来复制文件或转换文件，格式为 “dd [参数]”。dd 命令只能从前面取，无法从后面取。dd 命令的参数及作用:</p><ul><li>if    输入的文件名称 input file</li><li>of    输出的文件名称 output file</li><li>bs    设置每个”块”的大小</li><li>count 设置要复制”块”的个数</li></ul></blockquote><blockquote><p><code>file</code>:用于查看文件的类型，格式为 “file 文件名”</p></blockquote><blockquote><p>任务</p><ul><li>复习：<a href="https://www.linuxprobe.com/chapter-02.html" target="_blank" rel="noopener">第二章：新手必须掌握的Linux命令</a></li><li>预习：9.13:<a href="https://www.linuxprobe.com/chapter-03.html" target="_blank" rel="noopener">第3章 管道符、重定向与环境变量</a></li><li>预习：9.14:<a href="https://www.linuxprobe.com/chapter-04.html" target="_blank" rel="noopener">第4章 Vim编辑器与Shell命令脚本</a></li><li>预习：9.15:<a href="https://www.linuxprobe.com/chapter-05.html" target="_blank" rel="noopener">第5章 用户身份与文件权限</a></li></ul></blockquote><p>最后附上几张笔记：<br><img src="/img/9.8-1.jpg" alt="9.8笔记" title="9.8笔记"><br><img src="/img/9.8-2.jpg" alt="9.8笔记" title="9.8笔记"><br><img src="/img/9.8-3.jpg" alt="9.8笔记" title="9.8笔记"><br><img src="/img/9.8-4.jpg" alt="9.8笔记" title="9.8笔记"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第二节课</title>
      <link href="/2019/09/09/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%BA%8C%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/09/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%BA%8C%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>9月7号开始了第二节课，主要讲述了<a href="https://www.linuxprobe.com/chapter-01.html" target="_blank" rel="noopener">第一章：部署虚拟环境安装Linux系统</a>及<a href="https://www.linuxprobe.com/chapter-02.html" target="_blank" rel="noopener">第二章：新手必须掌握的Linux命令</a>中的一小部分内容，涉及到的命令如下：<code>man</code> <code>echo</code> <code>date</code> 。<a id="more"></a></p></blockquote><blockquote><p>需要安装带有<code>GUI图形界面</code>的系统，系统安装过程不必多说，说一下虚拟机内存的分配原则，如果电脑内存为2G的话，虚拟机内存一般分1G；如果电脑内存大于等于4G时，一般分配2G。</p></blockquote><blockquote><p><code>RPM（红帽软件包管理器）</code>：通过将安装规则与源代码打包到一起，来降低软件的安装难度。</p></blockquote><blockquote><p><code>Yum软件仓库</code>：通过将大量的常用RPM软件存放在一起，解决软件包之间的依赖关系 ，进一步来降低软件的安装难度。</p></blockquote><blockquote><p><code>rhel7</code> 系统 <code>systemctl</code> 设置服务开机自启、不启动、查看各级别下服务启动状态等常用命令</p><blockquote><p><code>systemctl restart 服务名</code>  重启服务<br><code>systemctl start 服务名</code>    启动服务<br><code>systemctl stop 服务名</code>     关闭服务<br><code>systemctl enable 服务名</code>   加入开机启动项<br><code>systemctl status 服务名</code>   查看服务状态</p></blockquote></blockquote><blockquote><p><code>man</code> ：主要是用来查看某个命令的使用方式的，即帮助信息，可使用man man 查看man命令的使用，如下图所示：<img src="/img/man.png" alt="man"></p></blockquote><blockquote><p><code>echo</code> ：用于在终端输出字符串或变量提取后的值，格式为 “echo [字符串 | $变量]”。例如：<br>输入 <code>echo wangmj</code> ，就会输出 <code>wangmj</code><br>输入 <code>echo $SHELL</code> ，就会输出 <code>/bin/bash</code></p></blockquote><blockquote><p><code>date</code> ：用于显示及设置系统的时间或日期，格式为 “date [选项] [+指定的格式]”。</p><blockquote><p>date 命令中的参数以及作用：</p><ul><li>%t    跳格[TAB键]</li><li>%H    小时（00 ~ 23）</li><li>%I    小时（00 ~ 12）</li><li>%M    分钟（00 ~ 59）</li><li>%S    秒（00 ~ 59）</li><li>%j    今年中的第几天   <br><br>只需要在 <code>date</code> 命令中输入以 “+” 号开头的参数，即可按照指定格式来输出系统的时间或日期，比如：需要按照”年-月-日 小时:分钟:秒” 的格式查看当前系统时间的date命令如下：<code>date &quot;+%Y-%m-%d %H:%M:%S&quot;</code> ,则会输出如下图：<img src="/img/date.png" alt="date"> <br><br><code>date -s</code> 可以设置当前时间，比如：输入 <code>date -s &quot;20190909 18:52:00&quot;</code>  ，输出如下：<img src="/img/date-s.png" alt="date-s"></li></ul></blockquote></blockquote><blockquote><p>任务：</p><blockquote><p>复习：安装系统<br>预习：<a href="https://www.linuxprobe.com/chapter-02.html" target="_blank" rel="noopener">第二章：新手必须掌握的Linux命令</a></p></blockquote></blockquote><blockquote><p>最后按照惯例，附上几张笔记<br><img src="/img/9.7-1.jpg" alt="9.7笔记" title="9.7笔记"><br><img src="/img/9.7-2.jpg" alt="9.7笔记" title="9.7笔记"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux就该这么学-第一节课</title>
      <link href="/2019/09/07/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE/"/>
      <url>/2019/09/07/linux%E5%B0%B1%E8%AF%A5%E8%BF%99%E4%B9%88%E5%AD%A6-%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>报了<a href="https://www.linuxprobe.com/" target="_blank" rel="noopener">刘遄老师</a>的第 <em>23</em> 期Linux培训课程，9月6号开始了第一节课，主要讲述了一些培训及考试须知，以及一些linux系统的演变等。<a id="more"></a></p></blockquote><blockquote><p>首先附上本期培训的课程安排<br><img src="/img/9%E6%9C%88%E8%AF%BE%E8%A1%A8.jpg" alt="9月课表" title="9月课表"><br><img src="/img/10%E6%9C%88%E8%AF%BE%E8%A1%A8.png" alt="10月课表" title="10月课表"></p></blockquote><blockquote><p>上课时间为每周五，周六，周日的 19：00-21：00</p></blockquote><blockquote><p>每个月的25号可以预约下个月的考场</p></blockquote><blockquote><p>证书有效期为3年</p></blockquote><blockquote><p>开源精神：</p><blockquote><p>创建衍生自由<br>复制自由<br>传播自由<br>收费自由<br>修改自由</p></blockquote></blockquote><blockquote><p>Linux 对比 Windows </p><blockquote><p>稳定且有效率<br>免费或少许费用<br>漏洞少且快速修补<br>多任务多用户<br>更加安全的用户及文件权限策略<br>适合小内核程序的嵌入程序<br>相对不耗资源</p></blockquote></blockquote><blockquote><p>最后附上一张笔记<br><img src="/img/9.6%E7%AC%94%E8%AE%B0.jpg" alt="9.6笔记" title="9.6笔记"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《Linux就该这么学》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《断舍离》读书笔记</title>
      <link href="/2019/08/06/%E6%96%AD%E8%88%8D%E7%A6%BB%20%20---%E5%B1%B1%E4%B8%8B%E8%8B%B1%E5%AD%90/"/>
      <url>/2019/08/06/%E6%96%AD%E8%88%8D%E7%A6%BB%20%20---%E5%B1%B1%E4%B8%8B%E8%8B%B1%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天刚看完 <code>山下英子</code> 的<a href="https://book.douban.com/subject/24749465/" target="_blank" rel="noopener">《断舍离》</a>,做了一些读书笔记。<br> <a id="more"></a></p></blockquote><blockquote><p>断舍离：通过收拾物品来了解自己，整理自己内心的混沌，让人生更舒适的 <code>行为技术</code> 。</p></blockquote><blockquote><p>断= <code>断绝</code> 想要进入自己家的不需要的东西<br>  舍= <code>舍弃</code> 家里到处泛滥的破烂儿<br>  离= <code>脱离</code> 对物品的执念，处于游刃有余的自在的空间。</p></blockquote><blockquote><p>只有对当下的自己 <code>合适且必需</code> ，也确实 <code>在用</code> 的东西，才会留在你自己的空间里。</p></blockquote><blockquote><p>我们总是忽视个人因素，武断地下结论说某种东西“好”还是“不好”，这是不恰当的。</p></blockquote><blockquote><p>入口是“断”的闸门，出口是“舍”的闸门。</p></blockquote><blockquote><p>三种扔不掉东西的人:</p><blockquote><p><code>逃避现实型</code><br><code>执着过去型</code><br><code>担忧未来型</code></p></blockquote></blockquote><blockquote><p>在断舍离里，要把时间轴 <code>放在当下</code> ，而良心不安与担忧，其实是把时间轴错位到了过去与未来。比起凌乱，堆积了聚焦过去和未来的物品才是问题。</p></blockquote><blockquote><p>在考虑物品是否应该被留下时，思考的主语是“<code>我</code>”，而不是物品。</p></blockquote><blockquote><p>选择物品的窍门，不是“能不能用”，而是 “<code>我要不要用</code>” ，这一点必须铭刻在心。</p></blockquote><blockquote><p>物品是一面能映照出真实的自己的镜子，直面物品，就是 <code>直面真实的自己</code> 。</p></blockquote><blockquote><p>只集中于一点做到 <code>完美</code> ，就能不知不觉地打开收拾的突破口。</p></blockquote><blockquote><p>把自己用不着的东西送给有需要的人时，要说“请收下”，不能说“给你”。</p></blockquote><blockquote><p>不断地重复 <code>三分法</code> ，可以避免整理物品时所造成的混乱。</p></blockquote><blockquote><p>看不见的收纳空间只能放满 <code>七成</code> ；看得见的收纳空间从美观上来说放东西限量是 <code>五成</code> ；给别人看的收纳空间，只能放 <code>一成</code> 东西。</p></blockquote><blockquote><p>通过 <code>限制总量</code>，更加严格地筛选出自己喜欢的物品，自然而然地 <code>提升了品味</code> 。</p></blockquote><blockquote><p>整理收纳的时候，一定要方便自己取出，尽可能不让自己感觉到 <code>压力</code> 。因为即使是一点点的压力，都会让人觉得好麻烦，结果放弃取出的物品和回收物品。</p></blockquote><blockquote><p>如果只靠本能与物品打交道，物品就只会有增无减。关键词是“<code>每次</code>”。不管是个人还是企业，能够接受不足，拥有“知足”的观点的时代已经来临。</p></blockquote><blockquote><p>所谓断舍离，就是训练自己成为能够依赖的自己，最终彻底脱离“没法收拾的自己”。<br>  不管东西有多贵，有多稀有，能够按照自己是否需要来判断的人才够强大。能够 <code>放开执念</code> ，人才能更有自信。</p></blockquote><blockquote><p>物品是 <code>自身的投影</code>。既然如此，物品既棒又新鲜就是最重要的。</p></blockquote><blockquote><p>如果能够认为一切物品都是向地球借来的，就能自然而然地涌出 <code>感谢与敬畏之情</code>。</p></blockquote><blockquote><p>物品 <code>要用</code> 才有价值—是为断<br>  物品在 <code>此时丶当下</code>，应出现在需要它的地方—是为舍<br>  物品处于 <code>恰当的位置</code> ，才能展现美感—是为离</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 断舍离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识markdown</title>
      <link href="/2019/08/02/%E5%88%9D%E8%AF%86Markdown/"/>
      <url>/2019/08/02/%E5%88%9D%E8%AF%86Markdown/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搭建好了两个博客，<a href="http://wangmj.cn" title="http://wangmj.cn">一个</a>利用lnmp+wordpress,<a href="https://github.wangmj.cn" title="https://github.wangmj.cn" target="_blank" rel="noopener">另一个</a> 利用了<a href="https://github.com/wangmengjun142857/wangmengjun142857.github.io" title="https://github.com/wangmengjun142857/wangmengjun142857.github.io" target="_blank" rel="noopener">GitHub</a> hexo来搭建。wordpress 搭建的博客可以直接在后台写博客，就像正常发表微博或者<a href="https://www.cnblogs.com/wangmengjun/" target="_blank" rel="noopener">博客园</a>中发表博客一样，无需利用<a href="https://markdown-zh.readthedocs.io/en/latest/" target="_blank" rel="noopener">Markdown</a>来编辑博客内容。但是hexo的则需要使<strong><code>markdown</code></strong>来编辑。</p></blockquote><p>这篇博客主要是为了练习<strong><code>markdown</code></strong>及测试。</p><a id="more"></a><hr><blockquote><p>下面引用下_GitHub_的头像<br> <img src="https://avatars2.githubusercontent.com/u/27360259?s=400&u=e22fa3169e52893b0747d5392f51d782105d4223&v=4" alt="头像" title="头像"></p></blockquote><blockquote><p>再引用个动图<br> <img src="https://img-blog.csdn.net/20160907182518474" alt="动图"></p></blockquote><blockquote><p>最后再引用下本地图片Irelia<br>  <img src="/img/Irelia.jpg" alt="Irelia" title="Irelia"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/30/hello-world/"/>
      <url>/2019/07/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
